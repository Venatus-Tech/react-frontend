[{"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\index.js":"1","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\App.js":"3","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\Home\\Home.jsx":"4","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\components\\navbar\\Navbar.jsx":"5","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\components\\Footer\\Footer.jsx":"6","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\members\\Members.jsx":"7","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\events\\Events.jsx":"8","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\aboutUs\\AboutUs.jsx":"9","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\components\\IconCard\\IconCard.js":"10","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\components\\LinkPanel\\LinkPanel.jsx":"11","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\events\\Card.jsx":"12","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\events\\Paper.jsx":"13","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\events\\cardData.js":"14","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\events\\Modal.jsx":"15","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\events\\PaperSec.jsx":"16","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\communities\\Communities.jsx":"17","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\communities\\Paper.jsx":"18","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\communities\\Modal.jsx":"19","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\components\\footer\\Footer.jsx":"20","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\home\\Home.jsx":"21","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\components\\navbar\\Modal.jsx":"22","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\form\\Form.js":"23","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\firebase.js":"24","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\form\\GeneralForm.js":"25","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\form\\csgoForm\\CsgoForm.js":"26","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\form\\csgoForm\\CsgoForm1v1.js":"27"},{"size":517,"mtime":1609227963138,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"29"},{"size":1335,"mtime":1610885033534,"results":"31","hashOfConfig":"29"},{"size":3241,"mtime":1609866585998,"results":"32","hashOfConfig":"29"},{"size":3279,"mtime":1610639838191,"results":"33","hashOfConfig":"29"},{"size":2329,"mtime":1610025263452,"results":"34","hashOfConfig":"29"},{"size":145,"mtime":1609227963279,"results":"35","hashOfConfig":"29"},{"size":4789,"mtime":1610885463173,"results":"36","hashOfConfig":"29"},{"size":2390,"mtime":1610024546101,"results":"37","hashOfConfig":"29"},{"size":432,"mtime":1609323549311,"results":"38","hashOfConfig":"29"},{"size":1728,"mtime":1610027667617,"results":"39","hashOfConfig":"29"},{"size":1109,"mtime":1609329040636,"results":"40","hashOfConfig":"29"},{"size":1910,"mtime":1610884693746,"results":"41","hashOfConfig":"29"},{"size":5874,"mtime":1609850423928,"results":"42","hashOfConfig":"29"},{"size":645,"mtime":1609849868026,"results":"43","hashOfConfig":"29"},{"size":1143,"mtime":1609849868026,"results":"44","hashOfConfig":"29"},{"size":1235,"mtime":1609850423913,"results":"45","hashOfConfig":"29"},{"size":1498,"mtime":1609949106753,"results":"46","hashOfConfig":"29"},{"size":1265,"mtime":1609874381747,"results":"47","hashOfConfig":"29"},{"size":2329,"mtime":1610025263452,"results":"48","hashOfConfig":"29"},{"size":3241,"mtime":1609866585998,"results":"49","hashOfConfig":"29"},{"size":1114,"mtime":1610028252046,"results":"50","hashOfConfig":"29"},{"size":455,"mtime":1610824516546,"results":"51","hashOfConfig":"29"},{"size":510,"mtime":1610540629031,"results":"52","hashOfConfig":"29"},{"size":35167,"mtime":1610825248337,"results":"53","hashOfConfig":"29"},{"size":11110,"mtime":1610883178824,"results":"54","hashOfConfig":"29"},{"size":6421,"mtime":1610885485751,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"kv17hv",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\index.js",[],["121","122"],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\App.js",[],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\Home\\Home.jsx",["123"],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\components\\navbar\\Navbar.jsx",["124","125","126"],"import React, { useState } from \"react\";\r\nimport \"./Navbar.css\";\r\nimport Logo from \"./venatusLogo.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Modal from \"./Modal\";\r\nfunction Navbar() {\r\n  const [clicked, onClicked] = useState(false);\r\n  const [event, onTrigger] = useState(false);\r\n  return (\r\n    <div>\r\n      <div className=\"navbar\">\r\n        <div className=\"v-logo-div\">\r\n          <img src={Logo} alt=\"venatusLogo\" className=\"vlogo\" />\r\n        </div>\r\n        <div className={clicked ? \"list-active\" : \"list\"}>\r\n          <p className=\"list-item\">\r\n            <Link\r\n              to=\"/\"\r\n              style={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n            >\r\n              Home\r\n            </Link>\r\n          </p>\r\n\r\n          <p className=\"list-item\">\r\n            <Link\r\n              to=\"/about\"\r\n              style={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n            >\r\n              About\r\n            </Link>\r\n          </p>\r\n          <p className=\"list-item\">\r\n            <Link\r\n              to=\"/events\"\r\n              style={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n            >\r\n              Events\r\n            </Link>\r\n          </p>\r\n          <p className=\"list-item\">\r\n            <Link\r\n              to=\"/communities\"\r\n              style={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n            >\r\n              Communities\r\n            </Link>\r\n          </p>\r\n          {/* <p className=\"list-item\">\r\n            <Link\r\n              to=\"/members\"\r\n              style={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n            >\r\n              Members\r\n            </Link>\r\n          </p>\r\n          <p className=\"list-item\">\r\n            <Link\r\n              to=\"/\"\r\n              style={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n            >\r\n              Blog\r\n            </Link>\r\n          </p> */}\r\n        </div>\r\n        <div\r\n          className=\"register\"\r\n          // onClick={() => {\r\n          //   onTrigger(true);\r\n          // }}\r\n        >\r\n          <Link\r\n            to=\"/regform\"\r\n            style={{ color: \"white\", textDecoration: \"none\" }}\r\n          >\r\n            <p className=\"register-text\">Register</p>\r\n          </Link>\r\n        </div>\r\n\r\n        <div\r\n          className=\"button\"\r\n          // onClick={() => {\r\n          //   onTrigger(true);\r\n          // }}\r\n        >\r\n          <Link\r\n            to=\"/regform\"\r\n            style={{ color: \"white\", textDecoration: \"none\" }}\r\n          >\r\n            {\" \"}\r\n            <p className=\"register-text\">Register</p>\r\n          </Link>\r\n        </div>\r\n        <div\r\n          className=\"icon-div\"\r\n          onClick={() => {\r\n            onClicked(!clicked);\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faBars} className=\"icon\" />\r\n        </div>\r\n      </div>\r\n      {/* {event ? (\r\n        <Modal\r\n          title=\"orientation\"\r\n          close={() => {\r\n            onTrigger(false);\r\n          }}\r\n          imgUrl=\"https://i.ibb.co/hfh1k6s/Orientation.png\"\r\n        ></Modal>\r\n      ) : null} */}\r\n    </div>\r\n  );\r\n}\r\nexport default Navbar;\r\n","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\components\\Footer\\Footer.jsx",[],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\members\\Members.jsx",[],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\events\\Events.jsx",["127","128","129","130"],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\aboutUs\\AboutUs.jsx",[],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\components\\IconCard\\IconCard.js",[],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\components\\LinkPanel\\LinkPanel.jsx",[],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\events\\Card.jsx",["131","132","133","134"],"import React from \"react\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport \"./Events.css\";\r\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction CardPer() {\r\n  return (\r\n    <Card variant='outlined'>\r\n      <CardContent>\r\n        <Typography color='textSecondary' gutterBottom>\r\n          Word of the Day\r\n        </Typography>\r\n        <Typography variant='h5' component='h2'>\r\n          ben\r\n        </Typography>\r\n\r\n        <Typography color='textSecondary'>adjective</Typography>\r\n        <Typography variant='body2' component='p'>\r\n          well meaning and kindly.\r\n          <br />\r\n          {'\"a benevolent smile\"'}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size='small'>Learn More</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\nexport default CardPer;\r\n",["135","136"],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\events\\Paper.jsx",["137","138"],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\events\\cardData.js",[],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\events\\Modal.jsx",["139","140"],"import { icon } from \"@fortawesome/fontawesome-svg-core\";\r\nimport React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport \"./Events.css\";\r\n\r\nfunction Modal(props) {\r\n  return ReactDom.createPortal(\r\n    <div className='modal-overlay'>\r\n      <div className='modal-ui'>\r\n        <div onClick={props.close}>\r\n          <i className='icon-modal'>⚔</i>\r\n        </div>\r\n        <h1 className='modal-heading'>{props.title}</h1>\r\n        <img className='modal-img' src={props.imgUrl}></img>\r\n        <p className='modal-para'>{props.info}</p>\r\n      </div>\r\n    </div>,\r\n    document.getElementById(\"portal\")\r\n  );\r\n}\r\nexport default Modal;\r\n","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\events\\PaperSec.jsx",[],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\communities\\Communities.jsx",[],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\communities\\Paper.jsx",["141","142"],"import { Paper } from \"@material-ui/core\";\r\nimport { React, useState } from \"react\";\r\nimport \"./communities.css\";\r\n\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Modal from \"./Modal\";\r\nconst useStyles = makeStyles({\r\n  paperStyle: {\r\n    backgroundColor: \"transparent\",\r\n    color: \"#a685e2\",\r\n    display: \"relative\",\r\n    borderRadius: \"10px\",\r\n    width: \"76%\",\r\n    margin: \"auto\",\r\n    \"&:hover\": {\r\n      transform: \"scale(1.05)\",\r\n      cursor: \"pointer\",\r\n      zIndex: \"5\",\r\n      backgroundColor: \"#282051\",\r\n    },\r\n  },\r\n  Button: {\r\n    bottom: \"0\",\r\n\r\n    display: \"absolute\",\r\n    fontSize: \"0.7rem\",\r\n  },\r\n});\r\nfunction PaperPer(props) {\r\n  const classes = useStyles();\r\n  const [isOpen, setOpen] = useState(false);\r\n  function onClicked() {\r\n    setOpen(true);\r\n    console.log(\"clicked\");\r\n  }\r\n  return (\r\n    <div>\r\n      <div onClick={onClicked}>\r\n        <Paper className={classes.paperStyle} elevation={15} variant='outline'>\r\n          <img src={props.picture} alt='event' className='img-future'></img>\r\n        </Paper>\r\n      </div>\r\n      {isOpen ? (\r\n        <Modal\r\n          close={() => {\r\n            setOpen(false);\r\n          }}\r\n          imgUrl={props.picture}\r\n          title={props.title}\r\n          discordLink={props.discord}\r\n          whatsappLink={props.whatsapp}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\nexport default PaperPer;\r\n","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\communities\\Modal.jsx",["143","144","145"],"import { icon } from \"@fortawesome/fontawesome-svg-core\";\r\nimport React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport \"./communities.css\";\r\nimport Whatsapp from \"../../assets/Vector.png\";\r\nimport Discord from \"../../assets/discord-icon.png\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faWhatsapp } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nfunction Modal(props) {\r\n  return ReactDom.createPortal(\r\n    <div className='modal-overlay'>\r\n      <div className='modal-ui'>\r\n        <div onClick={props.close}>\r\n          <i className='icon-modal'>⚔</i>\r\n        </div>\r\n\r\n        <img className='modal-img-community' src={props.imgUrl}></img>\r\n        <h1 className='modal-heading'>{props.title}</h1>\r\n        <p className='modal-para'>{props.info}</p>\r\n        <p className='para-icon'>Discord Link: </p>\r\n        <div>\r\n          <img src={Discord} alt='discord-icon' className='icons' />\r\n        </div>\r\n        <p className='para-icon'>Whatsapp Link: </p>\r\n        <div>\r\n          <img src={Whatsapp} alt='discord-icon' className='icons' />\r\n        </div>\r\n        <FontAwesomeIcon icon={[\"fab\", \"facebook-f\"]} />\r\n      </div>\r\n    </div>,\r\n    document.getElementById(\"portal\")\r\n  );\r\n}\r\nexport default Modal;\r\n","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\components\\footer\\Footer.jsx",[],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\home\\Home.jsx",["146"],"import React from \"react\";\r\nimport Banner from \"../../assets/ven-ban.png\";\r\nimport LinkPanel from \"../../components/LinkPanel/LinkPanel\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  IconButton,\r\n  InputBase,\r\n  makeStyles,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport icon1 from \"../../assets/icon1.png\";\r\nimport icon2 from \"../../assets/icon2.png\";\r\nimport icon3 from \"../../assets/icon3.png\";\r\nimport \"./Home.css\";\r\nimport IconCard from \"../../components/IconCard/IconCard\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    background: \"#33295F\",\r\n    width: \"35%\",\r\n    borderRadius: \"24px\",\r\n    padding: \"0 10px\",\r\n    margin: \"auto\",\r\n    \"&.MuiInputBase-root\": {\r\n      color: \"white\",\r\n    },\r\n    [theme.breakpoints.down(955)]: {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  button: {\r\n    backgroundColor: \"#b92941\",\r\n    borderRadius: \"12px\",\r\n    paddingLeft: \"5%\",\r\n    paddingRight: \"5%\",\r\n    fontSize: \"0.9rem\",\r\n    fontWeight: \"700\",\r\n    color: \"aliceblue\",\r\n    marginBottom: \"0.7rem\",\r\n    marginTop: \"0.7rem\",\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\nfunction Home() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      style={{ display: \"flex\", alignItems: \"center\", flexDirection: \"column\" }}\r\n    >\r\n      <img src={Banner} alt=\"Banner\" className=\"banner\" />\r\n\r\n      <LinkPanel />\r\n\r\n      {/* Icon divs start */}\r\n      <Grid container className=\"home-main-div\">\r\n        <IconCard\r\n          icon={icon1}\r\n          text=\"This subdivision of Venatus deals with outdoor gaming activities. This subdivision features originally created outdoor games, which are played by students in fests and events.\"\r\n        />\r\n        <IconCard\r\n          icon={icon2}\r\n          text=\" This subsection deals with ESports, students participate in several gaming competitions around the country and, moreover, host console/PC gaming competitions.\"\r\n        />\r\n        <IconCard\r\n          icon={icon3}\r\n          text=\"In Venatus we not only enhance our gaming skills but also learn management skills, innovate new ideas for games to engage students in experience other than studies.\"\r\n        />\r\n      </Grid>\r\n\r\n      {/* Icon divs end here */}\r\n\r\n      {/* Subscription email div starts here */}\r\n      <Grid container style={{ width: \"70%\" }}>\r\n        <Grid\r\n          item\r\n          sm={12}\r\n          container\r\n          justify=\"center\"\r\n          style={{ color: \"white\", textAlign: \"center\", marginBottom: \"4rem\" }}\r\n        >\r\n          <Grid item className=\"subscribe-div\">\r\n            <h1>Subscribe to our weekly newsletter</h1>\r\n          </Grid>\r\n          <Grid item sm={12}>\r\n            <Paper component=\"form\" className={classes.input}>\r\n              <InputBase\r\n                // className={classes.input}\r\n                placeholder=\"Email \"\r\n                inputProps={{ \"aria-label\": \"email\" }}\r\n                // value={searchTerm}\r\n                // onChange={handleSearch}\r\n\r\n                style={{ width: \"65%\", color: \"white\" }}\r\n              />\r\n              <Button className={classes.button}>Sign up</Button>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      {/* Subscription email div ends here */}\r\n    </div>\r\n  );\r\n}\r\nexport default Home;\r\n","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\components\\navbar\\Modal.jsx",["147","148","149","150","151","152"],"import { icon } from \"@fortawesome/fontawesome-svg-core\";\r\nimport React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport \"../../screens/communities/communities.css\";\r\nimport Whatsapp from \"../../assets/Vector.png\";\r\nimport Discord from \"../../assets/discord-icon.png\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faWhatsapp } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nfunction Modal(props) {\r\n  return ReactDom.createPortal(\r\n    <div className='modal-overlay'>\r\n      <div className='modal-ui'>\r\n        <div onClick={props.close}>\r\n          <i className='icon-modal'>⚔</i>\r\n        </div>\r\n\r\n        <img className='modal-img-navbar' src={props.imgUrl}></img>\r\n        <h1 className='modal-heading-navbar'> Orientation</h1>\r\n        <h1 className='modal-heading-navbar'> 9th January- 4pm</h1>\r\n\r\n        <p className='para-modal'>\r\n          <a href='https://bit.ly/3omp5W0' className='modal-link'>\r\n            Link to Microsoft Teams\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </div>,\r\n    document.getElementById(\"portal\")\r\n  );\r\n}\r\nexport default Modal;\r\n","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\form\\Form.js",["153","154","155","156","157","158","159","160","161"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid, makeStyles, TextField } from \"@material-ui/core\";\r\nimport firebase from \"../../firebase\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport GeneralFrom from \"./GeneralForm\";\r\nimport CsgoForm from \"./csgoForm/CsgoForm\";\r\n\r\n//Final form connected to firestore\r\nconst Form = () => {\r\n  return <GeneralFrom />;\r\n  // return <CsgoForm />;\r\n};\r\n\r\nexport default Form;\r\n","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\firebase.js",[],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\form\\GeneralForm.js",["162","163","164","165","166","167"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid, makeStyles, TextField, Button } from \"@material-ui/core\";\r\nimport firebase from \"../../firebase\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, ErrorMessage, Field, getIn, useFormik } from \"formik\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Form.css\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n    \"& .MuiFormLabel-root\": {\r\n      color: \"white\",\r\n    },\r\n    \"& .MuiInputBase-root\": {\r\n      color: \"white\",\r\n    },\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  error: {\r\n    margin: \"-5px 10px 0px\",\r\n    fontSize: \"0.8rem\",\r\n    color: \"red\",\r\n  },\r\n  longAnswer: {\r\n    width: \"50ch\",\r\n    display: \"block\",\r\n  },\r\n  formDiv: {\r\n    color: \"white\",\r\n    borderRadius: \"10px\",\r\n    width: \"80%\",\r\n    padding: \"20px\",\r\n    flexDirection: \"column\",\r\n    background: \"#92c7d461\",\r\n    \"& .MuiFilledInput-underline:after \": {\r\n      borderBottom: \"2px solid #0e0b1f\",\r\n    },\r\n    \"& .MuiInputLabel-formControl\": {\r\n      color: \"#0e0b1f\",\r\n    },\r\n    \"& .MuiInputBase-root\": {\r\n      color: \"white\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst General = () => {\r\n  const classes = useStyles();\r\n\r\n  const history = useHistory();\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const [activeTab, setActiveTab] = useState(\"\");\r\n\r\n  const handleActive = (tab) => {\r\n    setActiveTab(tab);\r\n  };\r\n\r\n  const [interest, setInterest] = useState({\r\n    isJuego: false,\r\n    isAlfresco: false,\r\n    isTech: false,\r\n    isPR: false,\r\n    isProd: false,\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setInterest({ ...interest, [event.target.name]: event.target.checked });\r\n    setActiveTab(\"\");\r\n  };\r\n\r\n  const [techFields, setTechFields] = useState({\r\n    app: false,\r\n    web: false,\r\n    ml: false,\r\n    design: false,\r\n    devops: false,\r\n  });\r\n\r\n  const handleTechChange = (event) => {\r\n    setTechFields({ ...techFields, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  // /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/\r\n  const phoneRegex = RegExp(/^\\+(?:[0-9] ?){6,14}[0-9]$/);\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string().required(\"*Required\"),\r\n    name: Yup.string().required(\"*Required\"),\r\n    phone: Yup.string()\r\n      .matches(phoneRegex, \"Invalid phone\")\r\n      .required(\"*Phone is required\"),\r\n    rollnum: Yup.string().required(\"*Required\"),\r\n    branch: Yup.string().required(\"*Required\"),\r\n    campus: Yup.string().required(\"*Required\"),\r\n    expInManagement: Yup.string().required(\"*Required\"),\r\n    expectationFromSoc: Yup.string().required(\"*Required\"),\r\n    whyVenatusHowContribute: Yup.string().required(\"*Required\"),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      name: \"\",\r\n      phone: \"\",\r\n      rollnum: \"\",\r\n      branch: \"\",\r\n      campus: \"\",\r\n      expInManagement: \"\",\r\n      expectationFromSoc: \"\",\r\n      whyVenatusHowContribute: \"\",\r\n      whyJuego: \"\",\r\n      gamerTag: \"\",\r\n      platform: \"\",\r\n      designGame: \"\",\r\n      whyTech: \"\",\r\n      expectations: \"\",\r\n      github: \"\",\r\n      techStack: \"\",\r\n      problemSolved: \"\",\r\n      experienceProd: \"\",\r\n      prevWork: \"\",\r\n      experiencePR: \"\",\r\n      strategies: \"\",\r\n    },\r\n    validationSchema,\r\n    onSubmit: async (values, { resetForm }) => {\r\n      const general = {\r\n        email: values.email,\r\n        name: values.name,\r\n        phone: values.phone,\r\n        rollnum: values.rollnum,\r\n        branch: values.branch,\r\n        campus: values.campus,\r\n        expInManagement: values.expInManagement,\r\n        expectationFromSoc: values.expectationFromSoc,\r\n        whyVenatusHowContribute: values.whyVenatusHowContribute,\r\n      };\r\n      const juego = {\r\n        whyJuego: values.whyJuego,\r\n        gamerTag: values.gamerTag,\r\n        platform: values.platform,\r\n      };\r\n      const alfresco = {\r\n        designGame: values.designGame,\r\n      };\r\n      const tech = {\r\n        whyTech: values.whyTech,\r\n        expectations: values.expectations,\r\n        github: values.github,\r\n        techStack: values.techStack,\r\n        problemSolved: values.problemSolved,\r\n        interests: techFields,\r\n      };\r\n      const production = {\r\n        experience: values.experienceProd,\r\n        prevWork: values.prevWork,\r\n      };\r\n      const pr = {\r\n        experience: values.experiencePR,\r\n        strategies: values.strategies,\r\n      };\r\n\r\n      await db\r\n        .collection(\"users\")\r\n        .add(general)\r\n        .then(async (docRef) => {\r\n          if (interest.isJuego) {\r\n            await db\r\n              .collection(\"users\")\r\n              .doc(docRef.id)\r\n              .collection(\"juego\")\r\n              .add(juego);\r\n          }\r\n          if (interest.isAlfresco) {\r\n            await db\r\n              .collection(\"users\")\r\n              .doc(docRef.id)\r\n              .collection(\"alfresco\")\r\n              .add(alfresco);\r\n          }\r\n          if (interest.isTech) {\r\n            await db\r\n              .collection(\"users\")\r\n              .doc(docRef.id)\r\n              .collection(\"tech\")\r\n              .add(tech);\r\n          }\r\n          if (interest.isProd) {\r\n            await db\r\n              .collection(\"users\")\r\n              .doc(docRef.id)\r\n              .collection(\"production\")\r\n              .add(production);\r\n          }\r\n          if (interest.isPR) {\r\n            await db\r\n              .collection(\"users\")\r\n              .doc(docRef.id)\r\n              .collection(\"pr\")\r\n              .add(pr);\r\n          }\r\n          console.log(\"Registration successfull\");\r\n          resetForm();\r\n          setActiveTab(\"\");\r\n          setOpen(true);\r\n          setTimeout(() => {\r\n            history.push(\"/\");\r\n          }, 3000);\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      style={{ paddingTop: \"4.5rem\", minHeight: \"100vh\" }}\r\n      justify=\"center\"\r\n    >\r\n      <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          Registered Successfully!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Grid item container className={classes.formDiv}>\r\n        <h1 style={{ textAlign: \"center\", color: \"#ee9595\" }}>\r\n          Recruitment Form 2021\r\n        </h1>\r\n        <Grid container>\r\n          <Grid item sm={4}>\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n              <TextField\r\n                label=\"Email\"\r\n                color=\"secondary\"\r\n                helperText={formik.errors.email}\r\n                onChange={formik.handleChange}\r\n                value={formik.values.email}\r\n                error={\r\n                  formik.touched.email && formik.errors.email ? true : false\r\n                }\r\n                onBlur={formik.handleBlur}\r\n                name=\"email\"\r\n                id=\"email\"\r\n              />\r\n              <TextField\r\n                label=\"Name\"\r\n                color=\"secondary\"\r\n                helperText={formik.errors.name}\r\n                onChange={formik.handleChange}\r\n                value={formik.values.name}\r\n                error={formik.touched.name && formik.errors.name ? true : false}\r\n                onBlur={formik.handleBlur}\r\n                name=\"name\"\r\n                id=\"name\"\r\n              />\r\n\r\n              <TextField\r\n                helperText={formik.errors.phone}\r\n                onChange={formik.handleChange}\r\n                value={formik.values.phone}\r\n                error={\r\n                  formik.touched.phone && formik.errors.phone ? true : false\r\n                }\r\n                onBlur={formik.handleBlur}\r\n                name=\"phone\"\r\n                id=\"phone\"\r\n                label=\"Phone No.\"\r\n                color=\"secondary\"\r\n              />\r\n\r\n              <TextField\r\n                helperText={formik.errors.rollnum}\r\n                onChange={formik.handleChange}\r\n                value={formik.values.rollnum}\r\n                error={\r\n                  formik.touched.rollnum && formik.errors.rollnum ? true : false\r\n                }\r\n                onBlur={formik.handleBlur}\r\n                name=\"rollnum\"\r\n                id=\"rollnum\"\r\n                label=\"Roll No.\"\r\n                color=\"secondary\"\r\n              />\r\n\r\n              <TextField\r\n                helperText={formik.errors.branch}\r\n                onChange={formik.handleChange}\r\n                value={formik.values.branch}\r\n                error={\r\n                  formik.touched.branch && formik.errors.branch ? true : false\r\n                }\r\n                onBlur={formik.handleBlur}\r\n                name=\"branch\"\r\n                id=\"branch\"\r\n                label=\"Branch\"\r\n                color=\"secondary\"\r\n              />\r\n\r\n              <TextField\r\n                helperText={formik.errors.campus}\r\n                onChange={formik.handleChange}\r\n                value={formik.values.campus}\r\n                error={\r\n                  formik.touched.campus && formik.errors.campus ? true : false\r\n                }\r\n                onBlur={formik.handleBlur}\r\n                name=\"campus\"\r\n                id=\"campus\"\r\n                label=\"Campus\"\r\n                color=\"secondary\"\r\n              />\r\n              <p style={{ color: \"#ee9595\", fontWeight: \"500\" }}>\r\n                Select Department :-\r\n              </p>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={interest.isJuego}\r\n                    onChange={handleChange}\r\n                    name=\"isJuego\"\r\n                  />\r\n                }\r\n                label=\"Juego\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={interest.isAlfresco}\r\n                    onChange={handleChange}\r\n                    name=\"isAlfresco\"\r\n                  />\r\n                }\r\n                label=\"Alfresco\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={interest.isTech}\r\n                    onChange={handleChange}\r\n                    name=\"isTech\"\r\n                  />\r\n                }\r\n                label=\"Technical\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={interest.isProd}\r\n                    onChange={handleChange}\r\n                    name=\"isProd\"\r\n                  />\r\n                }\r\n                label=\"Production\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={interest.isPR}\r\n                    onChange={handleChange}\r\n                    name=\"isPR\"\r\n                  />\r\n                }\r\n                label=\"Public Relations\"\r\n              />\r\n              <p style={{ color: \"#ee9595\", fontWeight: \"500\" }}>\r\n                State if you have any prior experience in Event Management.\r\n              </p>\r\n              <TextField\r\n                id=\"quesend1\"\r\n                label=\"Answer\"\r\n                placeholder=\"Your answer here\"\r\n                name=\"expInManagement\"\r\n                variant=\"filled\"\r\n                rows={4}\r\n                multiline\r\n                className=\"smallMultiline\"\r\n                // style={{ width: \"40ch\" }}\r\n                onChange={formik.handleChange}\r\n                value={formik.values.expInManagement}\r\n                onBlur={formik.handleBlur}\r\n                error={\r\n                  formik.touched.expInManagement &&\r\n                  formik.errors.expInManagement\r\n                    ? true\r\n                    : false\r\n                }\r\n                helperText={formik.errors.expInManagement}\r\n              />\r\n              <p style={{ color: \"#ee9595\", fontWeight: \"500\" }}>\r\n                What are your expectations from this society?\r\n              </p>\r\n              <TextField\r\n                id=\"quesend2\"\r\n                label=\"Answer\"\r\n                placeholder=\"Your answer here\"\r\n                name=\"expectationFromSoc\"\r\n                variant=\"filled\"\r\n                rows={4}\r\n                multiline\r\n                className=\"smallMultiline\"\r\n                // style={{ width: \"40ch\" }}\r\n                onChange={formik.handleChange}\r\n                value={formik.values.expectationFromSoc}\r\n                onBlur={formik.handleBlur}\r\n                error={\r\n                  formik.touched.expectationFromSoc &&\r\n                  formik.errors.expectationFromSoc\r\n                    ? true\r\n                    : false\r\n                }\r\n                helperText={formik.errors.expectationFromSoc}\r\n              />\r\n              <p style={{ color: \"#ee9595\", fontWeight: \"500\" }}>\r\n                Why do you want to be a part of this society and how can you\r\n                contribute towards it?\r\n              </p>\r\n              <TextField\r\n                id=\"quesend3\"\r\n                label=\"Answer\"\r\n                placeholder=\"Your answer here\"\r\n                name=\"whyVenatusHowContribute\"\r\n                variant=\"filled\"\r\n                rows={4}\r\n                multiline\r\n                className=\"smallMultiline\"\r\n                // style={{ width: \"40ch\" }}\r\n                onChange={formik.handleChange}\r\n                value={formik.values.whyVenatusHowContribute}\r\n                onBlur={formik.handleBlur}\r\n                error={\r\n                  formik.touched.whyVenatusHowContribute &&\r\n                  formik.errors.whyVenatusHowContribute\r\n                    ? true\r\n                    : false\r\n                }\r\n                helperText={formik.errors.whyVenatusHowContribute}\r\n              />\r\n            </form>\r\n          </Grid>\r\n          <Grid item sm={8} container>\r\n            <Grid item xs={12} sm={1} className=\"buttonsDiv\">\r\n              <Button\r\n                disabled={!interest.isJuego}\r\n                name=\"juegoOn\"\r\n                onClick={() => {\r\n                  handleActive(\"juego\");\r\n                }}\r\n                className={\r\n                  activeTab === \"juego\" ? \"activeButton\" : \"interestButton\"\r\n                }\r\n                // style={{\r\n                //   color: \"#b92941\",\r\n                //   background: \"#0f0c1f\",\r\n                //   margin: \"10px 0px\",\r\n                //   fontWeight: \"800\",\r\n                // }}\r\n              >\r\n                <span\r\n                  style={{\r\n                    writingMode: \"vertical-rl\",\r\n                    textOrientation: \"upright\",\r\n                  }}\r\n                >\r\n                  Juego\r\n                </span>{\" \"}\r\n              </Button>\r\n              <Button\r\n                disabled={!interest.isAlfresco}\r\n                name=\"alfrescoOn\"\r\n                onClick={() => {\r\n                  handleActive(\"alfresco\");\r\n                }}\r\n                className={\r\n                  activeTab === \"alfresco\" ? \"activeButton\" : \"interestButton\"\r\n                }\r\n                // style={{\r\n                //   color: \"#b92941\",\r\n                //   background: \"#0f0c1f\",\r\n                //   margin: \"10px 0px\",\r\n                //   fontWeight: \"800\",\r\n                // }}\r\n              >\r\n                <span\r\n                  style={{\r\n                    writingMode: \"vertical-rl\",\r\n                    textOrientation: \"upright\",\r\n                  }}\r\n                >\r\n                  Alfresco\r\n                </span>{\" \"}\r\n              </Button>\r\n              <Button\r\n                disabled={!interest.isTech}\r\n                name=\"techOn\"\r\n                onClick={() => {\r\n                  handleActive(\"tech\");\r\n                }}\r\n                className={\r\n                  activeTab === \"tech\" ? \"activeButton\" : \"interestButton\"\r\n                }\r\n                // style={{\r\n                //   color: \"#b92941\",\r\n                //   background: \"#0f0c1f\",\r\n                //   margin: \"10px 0px\",\r\n                //   fontWeight: \"800\",\r\n                // }}\r\n              >\r\n                <span\r\n                  style={{\r\n                    writingMode: \"vertical-rl\",\r\n                    textOrientation: \"upright\",\r\n                  }}\r\n                >\r\n                  Tech\r\n                </span>{\" \"}\r\n              </Button>\r\n              <Button\r\n                disabled={!interest.isProd}\r\n                name=\"prodOn\"\r\n                onClick={() => {\r\n                  handleActive(\"prod\");\r\n                }}\r\n                className={\r\n                  activeTab === \"prod\" ? \"activeButton\" : \"interestButton\"\r\n                }\r\n                // style={{\r\n                //   color: \"#b92941\",\r\n                //   background: \"#0f0c1f\",\r\n                //   margin: \"10px 0px\",\r\n                //   fontWeight: \"800\",\r\n                // }}\r\n              >\r\n                <span\r\n                  style={{\r\n                    writingMode: \"vertical-rl\",\r\n                    textOrientation: \"upright\",\r\n                  }}\r\n                >\r\n                  Production\r\n                </span>{\" \"}\r\n              </Button>\r\n              <Button\r\n                disabled={!interest.isPR}\r\n                name=\"prOn\"\r\n                onClick={() => {\r\n                  handleActive(\"pr\");\r\n                }}\r\n                className={\r\n                  activeTab === \"pr\" ? \"activeButton\" : \"interestButton\"\r\n                }\r\n                // style={{\r\n                //   color: activeTab === \"pr\"? \"#0f0c1f\":\"#b92941\",\r\n                //   background: \"#0f0c1f\",\r\n                //   margin: \"10px 0px\",\r\n                //   fontWeight: \"800\",\r\n                // }}\r\n              >\r\n                <span\r\n                  style={{\r\n                    writingMode: \"vertical-rl\",\r\n                    textOrientation: \"upright\",\r\n                  }}\r\n                >\r\n                  PR Dept\r\n                </span>{\" \"}\r\n              </Button>\r\n            </Grid>\r\n            <Grid item sm={11} style={{ padding: \"0px 20px\", width: \"100%\" }}>\r\n              {activeTab === \"juego\" ? (\r\n                <div>\r\n                  <p>Briefly state why you picked juego?</p>\r\n                  <TextField\r\n                    id=\"ques1\"\r\n                    label=\"Answer\"\r\n                    placeholder=\"Your answer here\"\r\n                    name=\"whyJuego\"\r\n                    variant=\"filled\"\r\n                    rows={4}\r\n                    multiline\r\n                    className=\"largeMultiline\"\r\n                    // style={{ width: \"80ch\" }}\r\n                    helperText={\r\n                      interest.isJuego && formik.values.whyJuego === \"\"\r\n                        ? \"*Required\"\r\n                        : null\r\n                    }\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.whyJuego}\r\n                    error={\r\n                      interest.isJuego && formik.values.whyJuego === \"\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    onBlur={formik.handleBlur}\r\n                  />\r\n                  <p>Mention Your Gamer Tag along with Web Link</p>\r\n                  <TextField\r\n                    id=\"ques2\"\r\n                    label=\"Answer\"\r\n                    placeholder=\"Your answer here\"\r\n                    name=\"gamerTag\"\r\n                    variant=\"filled\"\r\n                    rows={2}\r\n                    multiline\r\n                    className=\"largeMultiline\"\r\n                    // style={{ width: \"80ch\" }}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.gamerTag}\r\n                    error={\r\n                      interest.isJuego && formik.values.gamerTag === \"\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    helperText={\r\n                      interest.isJuego && formik.values.gamerTag === \"\"\r\n                        ? \"*Required\"\r\n                        : null\r\n                    }\r\n                    onBlur={formik.handleBlur}\r\n                  />\r\n                  <p>\r\n                    Which platform in gaming do you prefer/ have prior\r\n                    experience in?\r\n                  </p>\r\n                  <TextField\r\n                    id=\"ques3\"\r\n                    label=\"Answer\"\r\n                    placeholder=\"Your answer here\"\r\n                    name=\"platform\"\r\n                    variant=\"filled\"\r\n                    rows={2}\r\n                    multiline\r\n                    className=\"largeMultiline\"\r\n                    // style={{ width: \"80ch\" }}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.platform}\r\n                    onBlur={formik.handleBlur}\r\n                    error={\r\n                      interest.isJuego && formik.values.platform === \"\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    helperText={\r\n                      interest.isJuego && formik.values.platform === \"\"\r\n                        ? \"*Required\"\r\n                        : null\r\n                    }\r\n                  />\r\n                </div>\r\n              ) : activeTab === \"alfresco\" ? (\r\n                <div>\r\n                  <p>\r\n                    Prepare the Design and Execution of an outdoor game where\r\n                    you convert a classic board game or a pen-paper game like\r\n                    (Tic TAC Toe or Chess etc.) into a life-size version. You\r\n                    have to keep in mind, how you will maintain the crowd, will\r\n                    it be a team challenge or a solo play, what all props you\r\n                    will need etc.\r\n                  </p>\r\n                  <TextField\r\n                    id=\"ques4\"\r\n                    label=\"Answer\"\r\n                    placeholder=\"Your answer here\"\r\n                    name=\"designGame\"\r\n                    variant=\"filled\"\r\n                    rows={8}\r\n                    multiline\r\n                    className=\"largeMultiline\"\r\n                    // style={{ width: \"80ch\" }}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.designGame}\r\n                    onBlur={formik.handleBlur}\r\n                    error={\r\n                      interest.isAlfresco && formik.values.designGame === \"\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    helperText={\r\n                      interest.isAlfresco && formik.values.designGame === \"\"\r\n                        ? \"*Required\"\r\n                        : null\r\n                    }\r\n                  />\r\n                </div>\r\n              ) : activeTab === \"tech\" ? (\r\n                <div>\r\n                  <p>Why do you want to join tech department?</p>\r\n                  <TextField\r\n                    id=\"ques5\"\r\n                    label=\"Answer\"\r\n                    placeholder=\"Your answer here\"\r\n                    name=\"whyTech\"\r\n                    variant=\"filled\"\r\n                    rows={4}\r\n                    multiline\r\n                    className=\"largeMultiline\"\r\n                    // style={{ width: \"80ch\" }}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.whyTech}\r\n                    onBlur={formik.handleBlur}\r\n                    error={\r\n                      interest.isTech && formik.values.whyTech === \"\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    helperText={\r\n                      interest.isTech && formik.values.whyTech === \"\"\r\n                        ? \"*Required\"\r\n                        : null\r\n                    }\r\n                  />\r\n\r\n                  <p>What do you expect from tech department?</p>\r\n                  <TextField\r\n                    id=\"ques6\"\r\n                    label=\"Answer\"\r\n                    placeholder=\"Your answer here\"\r\n                    name=\"expectations\"\r\n                    variant=\"filled\"\r\n                    rows={4}\r\n                    multiline\r\n                    className=\"largeMultiline\"\r\n                    // style={{ width: \"80ch\" }}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.expectations}\r\n                    onBlur={formik.handleBlur}\r\n                    error={\r\n                      interest.isTech && formik.values.expectations === \"\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    helperText={\r\n                      interest.isTech && formik.values.expectations === \"\"\r\n                        ? \"*Required\"\r\n                        : null\r\n                    }\r\n                  />\r\n\r\n                  <p>Github Link</p>\r\n                  <TextField\r\n                    id=\"ques7\"\r\n                    label=\"Answer\"\r\n                    placeholder=\"Your answer here\"\r\n                    name=\"github\"\r\n                    variant=\"filled\"\r\n                    multiline\r\n                    className=\"largeMultiline\"\r\n                    // style={{ width: \"80ch\" }}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.github}\r\n                    onBlur={formik.handleBlur}\r\n                    // error={\r\n                    //   interest.isTech && formik.values.github === \"\"\r\n                    //     ? true\r\n                    //     : false\r\n                    // }\r\n                    // helperText={\r\n                    //   interest.isTech && formik.values.github === \"\"\r\n                    //     ? \"*Required\"\r\n                    //     : null\r\n                    // }\r\n                  />\r\n\r\n                  <p>What is your curent tech stack?</p>\r\n                  <TextField\r\n                    id=\"ques8\"\r\n                    label=\"Answer\"\r\n                    placeholder=\"Your answer here\"\r\n                    name=\"techStack\"\r\n                    variant=\"filled\"\r\n                    rows={2}\r\n                    multiline\r\n                    className=\"largeMultiline\"\r\n                    // style={{ width: \"80ch\" }}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.techStack}\r\n                    onBlur={formik.handleBlur}\r\n                    error={\r\n                      interest.isTech && formik.values.techStack === \"\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    helperText={\r\n                      interest.isTech && formik.values.techStack === \"\"\r\n                        ? \"*Required\"\r\n                        : null\r\n                    }\r\n                  />\r\n                  <p>\r\n                    Explain an interesting problem you solved using programming.\r\n                  </p>\r\n                  <TextField\r\n                    id=\"ques9\"\r\n                    label=\"Answer\"\r\n                    placeholder=\"Your answer here\"\r\n                    name=\"problemSolved\"\r\n                    variant=\"filled\"\r\n                    rows={5}\r\n                    multiline\r\n                    className=\"largeMultiline\"\r\n                    // style={{ width: \"80ch\" }}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.problemSolved}\r\n                    onBlur={formik.handleBlur}\r\n                    error={\r\n                      interest.isTech && formik.values.problemSolved === \"\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    helperText={\r\n                      interest.isTech && formik.values.problemSolved === \"\"\r\n                        ? \"*Required\"\r\n                        : null\r\n                    }\r\n                  />\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={techFields.app}\r\n                        onChange={handleTechChange}\r\n                        name=\"app\"\r\n                      />\r\n                    }\r\n                    label=\"App Dev.\"\r\n                  />\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={techFields.web}\r\n                        onChange={handleTechChange}\r\n                        name=\"web\"\r\n                      />\r\n                    }\r\n                    label=\"Web Dev.\"\r\n                  />\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={techFields.ml}\r\n                        onChange={handleTechChange}\r\n                        name=\"ml\"\r\n                      />\r\n                    }\r\n                    label=\"Machine Learning\"\r\n                  />\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={techFields.design}\r\n                        onChange={handleTechChange}\r\n                        name=\"design\"\r\n                      />\r\n                    }\r\n                    label=\"Designing\"\r\n                  />\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={techFields.devops}\r\n                        onChange={handleTechChange}\r\n                        name=\"devops\"\r\n                      />\r\n                    }\r\n                    label=\"Devops\"\r\n                  />\r\n                </div>\r\n              ) : activeTab === \"prod\" ? (\r\n                <div>\r\n                  <p>\r\n                    Mention any prior experience in group discussion or content\r\n                    writing.\r\n                  </p>\r\n                  <TextField\r\n                    id=\"ques10\"\r\n                    label=\"Answer\"\r\n                    placeholder=\"Your answer here\"\r\n                    name=\"experienceProd\"\r\n                    variant=\"filled\"\r\n                    rows={4}\r\n                    multiline\r\n                    className=\"largeMultiline\"\r\n                    // style={{ width: \"80ch\" }}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.experienceProd}\r\n                    onBlur={formik.handleBlur}\r\n                    // error={\r\n                    //   interest.isProd && formik.values.experienceProd === \"\"\r\n                    //     ? true\r\n                    //     : false\r\n                    // }\r\n                    // helperText={\r\n                    //   interest.isProd && formik.values.experienceProd === \"\"\r\n                    //     ? \"*Required\"\r\n                    //     : null\r\n                    // }\r\n                  />\r\n                  <p>Add links to your existing works here.(If any)</p>\r\n                  <TextField\r\n                    id=\"ques11\"\r\n                    label=\"Answer\"\r\n                    placeholder=\"Your answer here\"\r\n                    name=\"prevWork\"\r\n                    variant=\"filled\"\r\n                    rows={4}\r\n                    multiline\r\n                    className=\"largeMultiline\"\r\n                    // style={{ width: \"80ch\" }}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.prevWork}\r\n                    onBlur={formik.handleBlur}\r\n                  />\r\n                </div>\r\n              ) : activeTab === \"pr\" ? (\r\n                <div>\r\n                  <p>\r\n                    Mention any prior experience in public relations. (If any)\r\n                  </p>\r\n                  <TextField\r\n                    id=\"ques12\"\r\n                    label=\"Answer\"\r\n                    placeholder=\"Your answer here\"\r\n                    name=\"experiencePR\"\r\n                    variant=\"filled\"\r\n                    rows={4}\r\n                    multiline\r\n                    className=\"largeMultiline\"\r\n                    // style={{ width: \"80ch\" }}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.experiencePR}\r\n                    onBlur={formik.handleBlur}\r\n                  />\r\n                  <p>\r\n                    What publicising strategies you\\'ll follow for a college\r\n                    level event?\r\n                  </p>\r\n                  <TextField\r\n                    id=\"ques13\"\r\n                    label=\"Answer\"\r\n                    placeholder=\"Your answer here\"\r\n                    name=\"strategies\"\r\n                    variant=\"filled\"\r\n                    rows={4}\r\n                    multiline\r\n                    className=\"largeMultiline\"\r\n                    // style={{ width: \"80ch\" }}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.strategies}\r\n                    onBlur={formik.handleBlur}\r\n                    error={\r\n                      interest.isPR && formik.values.strategies === \"\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    helperText={\r\n                      interest.isPR && formik.values.strategies === \"\"\r\n                        ? \"*Required\"\r\n                        : null\r\n                    }\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <h3>\r\n                  Click on the department tab after selecting from the checkbox\r\n                </h3>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Button\r\n          style={{\r\n            width: \"200px\",\r\n            height: \"50px\",\r\n            color: \"#0e0b1f\",\r\n            background: \"#b92941\",\r\n            fontWeight: \"600\",\r\n            fontSize: \"20px\",\r\n            margin: \"20px auto\",\r\n          }}\r\n          onClick={formik.handleSubmit}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default General;\r\n","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\form\\csgoForm\\CsgoForm.js",["168","169","170","171","172","173","174","175","176","177"],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\form\\csgoForm\\CsgoForm1v1.js",["178","179","180","181","182","183","184","185","186","187"],{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":7,"column":3,"nodeType":"194","messageId":"195","endLine":7,"endColumn":13},{"ruleId":"192","severity":1,"message":"196","line":7,"column":8,"nodeType":"194","messageId":"195","endLine":7,"endColumn":13},{"ruleId":"192","severity":1,"message":"197","line":10,"column":10,"nodeType":"194","messageId":"195","endLine":10,"endColumn":15},{"ruleId":"192","severity":1,"message":"198","line":10,"column":17,"nodeType":"194","messageId":"195","endLine":10,"endColumn":26},{"ruleId":"192","severity":1,"message":"199","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"192","severity":1,"message":"200","line":2,"column":16,"nodeType":"194","messageId":"195","endLine":2,"endColumn":21},{"ruleId":"192","severity":1,"message":"196","line":5,"column":8,"nodeType":"194","messageId":"195","endLine":5,"endColumn":13},{"ruleId":"192","severity":1,"message":"201","line":6,"column":8,"nodeType":"194","messageId":"195","endLine":6,"endColumn":16},{"ruleId":"192","severity":1,"message":"202","line":2,"column":10,"nodeType":"194","messageId":"195","endLine":2,"endColumn":14},{"ruleId":"192","severity":1,"message":"200","line":2,"column":16,"nodeType":"194","messageId":"195","endLine":2,"endColumn":21},{"ruleId":"192","severity":1,"message":"203","line":4,"column":8,"nodeType":"194","messageId":"195","endLine":4,"endColumn":15},{"ruleId":"192","severity":1,"message":"204","line":4,"column":19,"nodeType":"194","messageId":"195","endLine":4,"endColumn":36},{"ruleId":"188","replacedBy":"205"},{"ruleId":"190","replacedBy":"206"},{"ruleId":"192","severity":1,"message":"207","line":35,"column":9,"nodeType":"194","messageId":"195","endLine":35,"endColumn":16},{"ruleId":"192","severity":1,"message":"208","line":38,"column":12,"nodeType":"194","messageId":"195","endLine":38,"endColumn":21},{"ruleId":"192","severity":1,"message":"209","line":1,"column":10,"nodeType":"194","messageId":"195","endLine":1,"endColumn":14},{"ruleId":"210","severity":1,"message":"211","line":14,"column":9,"nodeType":"212","endLine":14,"endColumn":55},{"ruleId":"192","severity":1,"message":"213","line":5,"column":10,"nodeType":"194","messageId":"195","endLine":5,"endColumn":20},{"ruleId":"192","severity":1,"message":"214","line":7,"column":10,"nodeType":"194","messageId":"195","endLine":7,"endColumn":16},{"ruleId":"192","severity":1,"message":"209","line":1,"column":10,"nodeType":"194","messageId":"195","endLine":1,"endColumn":14},{"ruleId":"192","severity":1,"message":"215","line":8,"column":10,"nodeType":"194","messageId":"195","endLine":8,"endColumn":20},{"ruleId":"210","severity":1,"message":"211","line":18,"column":9,"nodeType":"212","endLine":18,"endColumn":65},{"ruleId":"192","severity":1,"message":"193","line":7,"column":3,"nodeType":"194","messageId":"195","endLine":7,"endColumn":13},{"ruleId":"192","severity":1,"message":"209","line":1,"column":10,"nodeType":"194","messageId":"195","endLine":1,"endColumn":14},{"ruleId":"192","severity":1,"message":"216","line":5,"column":8,"nodeType":"194","messageId":"195","endLine":5,"endColumn":16},{"ruleId":"192","severity":1,"message":"217","line":6,"column":8,"nodeType":"194","messageId":"195","endLine":6,"endColumn":15},{"ruleId":"192","severity":1,"message":"218","line":7,"column":10,"nodeType":"194","messageId":"195","endLine":7,"endColumn":25},{"ruleId":"192","severity":1,"message":"215","line":8,"column":10,"nodeType":"194","messageId":"195","endLine":8,"endColumn":20},{"ruleId":"210","severity":1,"message":"211","line":18,"column":9,"nodeType":"212","endLine":18,"endColumn":62},{"ruleId":"192","severity":1,"message":"199","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"192","severity":1,"message":"219","line":1,"column":27,"nodeType":"194","messageId":"195","endLine":1,"endColumn":36},{"ruleId":"192","severity":1,"message":"202","line":2,"column":10,"nodeType":"194","messageId":"195","endLine":2,"endColumn":14},{"ruleId":"192","severity":1,"message":"220","line":2,"column":16,"nodeType":"194","messageId":"195","endLine":2,"endColumn":26},{"ruleId":"192","severity":1,"message":"221","line":2,"column":28,"nodeType":"194","messageId":"195","endLine":2,"endColumn":37},{"ruleId":"192","severity":1,"message":"222","line":3,"column":8,"nodeType":"194","messageId":"195","endLine":3,"endColumn":16},{"ruleId":"192","severity":1,"message":"223","line":4,"column":13,"nodeType":"194","messageId":"195","endLine":4,"endColumn":16},{"ruleId":"192","severity":1,"message":"224","line":5,"column":10,"nodeType":"194","messageId":"195","endLine":5,"endColumn":19},{"ruleId":"192","severity":1,"message":"225","line":7,"column":8,"nodeType":"194","messageId":"195","endLine":7,"endColumn":16},{"ruleId":"192","severity":1,"message":"219","line":1,"column":27,"nodeType":"194","messageId":"195","endLine":1,"endColumn":36},{"ruleId":"192","severity":1,"message":"226","line":5,"column":10,"nodeType":"194","messageId":"195","endLine":5,"endColumn":16},{"ruleId":"192","severity":1,"message":"227","line":5,"column":18,"nodeType":"194","messageId":"195","endLine":5,"endColumn":30},{"ruleId":"192","severity":1,"message":"228","line":5,"column":32,"nodeType":"194","messageId":"195","endLine":5,"endColumn":37},{"ruleId":"192","severity":1,"message":"229","line":5,"column":39,"nodeType":"194","messageId":"195","endLine":5,"endColumn":44},{"ruleId":"192","severity":1,"message":"230","line":6,"column":8,"nodeType":"194","messageId":"195","endLine":6,"endColumn":17},{"ruleId":"192","severity":1,"message":"219","line":1,"column":27,"nodeType":"194","messageId":"195","endLine":1,"endColumn":36},{"ruleId":"192","severity":1,"message":"226","line":5,"column":10,"nodeType":"194","messageId":"195","endLine":5,"endColumn":16},{"ruleId":"192","severity":1,"message":"227","line":5,"column":18,"nodeType":"194","messageId":"195","endLine":5,"endColumn":30},{"ruleId":"192","severity":1,"message":"228","line":5,"column":32,"nodeType":"194","messageId":"195","endLine":5,"endColumn":37},{"ruleId":"192","severity":1,"message":"229","line":5,"column":39,"nodeType":"194","messageId":"195","endLine":5,"endColumn":44},{"ruleId":"192","severity":1,"message":"231","line":5,"column":57,"nodeType":"194","messageId":"195","endLine":5,"endColumn":61},{"ruleId":"192","severity":1,"message":"230","line":6,"column":8,"nodeType":"194","messageId":"195","endLine":6,"endColumn":17},{"ruleId":"192","severity":1,"message":"232","line":7,"column":8,"nodeType":"194","messageId":"195","endLine":7,"endColumn":24},{"ruleId":"192","severity":1,"message":"233","line":8,"column":8,"nodeType":"194","messageId":"195","endLine":8,"endColumn":16},{"ruleId":"192","severity":1,"message":"234","line":11,"column":10,"nodeType":"194","messageId":"195","endLine":11,"endColumn":20},{"ruleId":"192","severity":1,"message":"219","line":1,"column":27,"nodeType":"194","messageId":"195","endLine":1,"endColumn":36},{"ruleId":"192","severity":1,"message":"226","line":5,"column":10,"nodeType":"194","messageId":"195","endLine":5,"endColumn":16},{"ruleId":"192","severity":1,"message":"227","line":5,"column":18,"nodeType":"194","messageId":"195","endLine":5,"endColumn":30},{"ruleId":"192","severity":1,"message":"228","line":5,"column":32,"nodeType":"194","messageId":"195","endLine":5,"endColumn":37},{"ruleId":"192","severity":1,"message":"229","line":5,"column":39,"nodeType":"194","messageId":"195","endLine":5,"endColumn":44},{"ruleId":"192","severity":1,"message":"231","line":5,"column":57,"nodeType":"194","messageId":"195","endLine":5,"endColumn":61},{"ruleId":"192","severity":1,"message":"230","line":6,"column":8,"nodeType":"194","messageId":"195","endLine":6,"endColumn":17},{"ruleId":"192","severity":1,"message":"232","line":7,"column":8,"nodeType":"194","messageId":"195","endLine":7,"endColumn":24},{"ruleId":"192","severity":1,"message":"233","line":8,"column":8,"nodeType":"194","messageId":"195","endLine":8,"endColumn":16},{"ruleId":"192","severity":1,"message":"234","line":11,"column":10,"nodeType":"194","messageId":"195","endLine":11,"endColumn":20},"no-native-reassign",["235"],"no-negated-in-lhs",["236"],"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'Modal' is defined but never used.","'event' is assigned a value but never used.","'onTrigger' is assigned a value but never used.","'useState' is defined but never used.","'Paper' is defined but never used.","'PaperSec' is defined but never used.","'Grid' is defined but never used.","'Masonry' is defined but never used.","'ResponsiveMasonry' is defined but never used.",["235"],["236"],"'history' is assigned a value but never used.","'onClicked' is defined but never used.","'icon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Typography' is defined but never used.","'Button' is defined but never used.","'faWhatsapp' is defined but never used.","'Whatsapp' is defined but never used.","'Discord' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'useEffect' is defined but never used.","'makeStyles' is defined but never used.","'TextField' is defined but never used.","'firebase' is defined but never used.","'Yup' is defined but never used.","'useFormik' is defined but never used.","'CsgoForm' is defined but never used.","'Formik' is defined but never used.","'ErrorMessage' is defined but never used.","'Field' is defined but never used.","'getIn' is defined but never used.","'FormGroup' is defined but never used.","'Form' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation"]