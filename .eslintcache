[{"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\index.js":"1","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\App.js":"3","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\Home\\Home.jsx":"4","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\components\\navbar\\Navbar.jsx":"5","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\components\\Footer\\Footer.jsx":"6","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\members\\Members.jsx":"7","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\events\\Events.jsx":"8","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\aboutUs\\AboutUs.jsx":"9","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\components\\IconCard\\IconCard.js":"10","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\components\\LinkPanel\\LinkPanel.jsx":"11","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\events\\Card.jsx":"12","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\events\\Paper.jsx":"13","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\events\\cardData.js":"14","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\events\\Modal.jsx":"15","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\events\\PaperSec.jsx":"16","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\communities\\Communities.jsx":"17","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\communities\\Paper.jsx":"18","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\communities\\Modal.jsx":"19","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\components\\footer\\Footer.jsx":"20","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\home\\Home.jsx":"21","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\components\\navbar\\Modal.jsx":"22","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\form\\Form.js":"23","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\firebase.js":"24","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\form\\GeneralForm.js":"25","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\form\\csgoForm\\CsgoForm.js":"26","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\form\\csgoForm\\CsgoForm1v1.js":"27","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\form\\codmform\\CodmForm1v1.js":"28","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\form\\codmform\\aimbotCodm.js":"29","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\form\\codmform\\Modal.jsx":"30","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\form\\valorantForm\\aimbotValorant.js":"31","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\form\\valorantForm\\Modal.jsx":"32"},{"size":517,"mtime":1609227963138,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"34"},{"size":1783,"mtime":1613585707396,"results":"36","hashOfConfig":"34"},{"size":3241,"mtime":1609866585998,"results":"37","hashOfConfig":"34"},{"size":3295,"mtime":1613060135799,"results":"38","hashOfConfig":"34"},{"size":2329,"mtime":1610025263452,"results":"39","hashOfConfig":"34"},{"size":145,"mtime":1609227963279,"results":"40","hashOfConfig":"34"},{"size":5724,"mtime":1613585723712,"results":"41","hashOfConfig":"34"},{"size":2390,"mtime":1610024546101,"results":"42","hashOfConfig":"34"},{"size":432,"mtime":1609323549311,"results":"43","hashOfConfig":"34"},{"size":1728,"mtime":1610027667617,"results":"44","hashOfConfig":"34"},{"size":1109,"mtime":1609329040636,"results":"45","hashOfConfig":"34"},{"size":1910,"mtime":1610884693746,"results":"46","hashOfConfig":"34"},{"size":5874,"mtime":1609850423928,"results":"47","hashOfConfig":"34"},{"size":645,"mtime":1609849868026,"results":"48","hashOfConfig":"34"},{"size":1143,"mtime":1609849868026,"results":"49","hashOfConfig":"34"},{"size":1235,"mtime":1609850423913,"results":"50","hashOfConfig":"34"},{"size":1498,"mtime":1609949106753,"results":"51","hashOfConfig":"34"},{"size":1265,"mtime":1609874381747,"results":"52","hashOfConfig":"34"},{"size":2329,"mtime":1610025263452,"results":"53","hashOfConfig":"34"},{"size":3241,"mtime":1609866585998,"results":"54","hashOfConfig":"34"},{"size":1114,"mtime":1610028252046,"results":"55","hashOfConfig":"34"},{"size":455,"mtime":1610824516546,"results":"56","hashOfConfig":"34"},{"size":510,"mtime":1610540629031,"results":"57","hashOfConfig":"34"},{"size":35167,"mtime":1610825248337,"results":"58","hashOfConfig":"34"},{"size":11110,"mtime":1610883178824,"results":"59","hashOfConfig":"34"},{"size":6421,"mtime":1610885485751,"results":"60","hashOfConfig":"34"},{"size":6717,"mtime":1611394976981,"results":"61","hashOfConfig":"34"},{"size":12885,"mtime":1613059989155,"results":"62","hashOfConfig":"34"},{"size":2265,"mtime":1613059301006,"results":"63","hashOfConfig":"34"},{"size":12892,"mtime":1613065014937,"results":"64","hashOfConfig":"34"},{"size":4909,"mtime":1613059295776,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"kv17hv",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"68"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"68"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"68"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"68"},"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\index.js",[],["149","150"],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\App.js",["151","152","153","154","155"],"import Navbar from \"./components/navbar/Navbar.jsx\";\r\nimport Home from \"./screens/home/Home.jsx\";\r\nimport About from \"./screens/aboutUs/AboutUs.jsx\";\r\nimport Members from \"./screens/members/Members.jsx\";\r\nimport Events from \"./screens/events/Events.jsx\";\r\nimport Form from \"./screens/form/Form.js\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Footer from \"./components/footer/Footer.jsx\";\r\nimport Communities from \"./screens/communities/Communities.jsx\";\r\nimport CsgoForm from \"./screens/form/csgoForm/CsgoForm.js\";\r\nimport CsgoForm1v1 from \"./screens/form/csgoForm/CsgoForm1v1.js\";\r\nimport CodmForm1v1 from \"./screens/form/codmform/CodmForm1v1.js\";\r\nimport AmibotCodm from \"./screens/form/codmform/aimbotCodm.js\";\r\nimport AimBotValorant from \"./screens/form/valorantForm/aimbotValorant.js\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"mega-div\">\r\n        <Navbar />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/about\" component={About} />\r\n          <Route path=\"/members\" component={Members} />\r\n          <Route exact path=\"/events\" component={Events} />\r\n          <Route path=\"/communities\" component={Communities} />\r\n          <Route path=\"/regform\" component={Form} />\r\n          {/* <Route path=\"/events/csgo5\" component={CsgoForm} />\r\n          <Route path=\"/events/csgo1\" component={CsgoForm1v1} /> */}\r\n          {/* <Route path=\"/events/codm\" component={CodmForm1v1} /> */}\r\n          {/* <Route path=\"/events/aimbot/valorant\" component={AimBotValorant} />\r\n          <Route path=\"/events/aimbot/codm\" component={AmibotCodm} /> */}\r\n        </Switch>\r\n        <Footer />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\Home\\Home.jsx",["156"],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\components\\navbar\\Navbar.jsx",["157","158","159"],"import React, { useState } from \"react\";\r\nimport \"./Navbar.css\";\r\nimport Logo from \"./venatusLogo.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Modal from \"./Modal\";\r\nfunction Navbar() {\r\n  const [clicked, onClicked] = useState(false);\r\n  const [event, onTrigger] = useState(false);\r\n  return (\r\n    <div>\r\n      <div className=\"navbar\">\r\n        <div className=\"v-logo-div\">\r\n          <img src={Logo} alt=\"venatusLogo\" className=\"vlogo\" />\r\n        </div>\r\n        <div className={clicked ? \"list-active\" : \"list\"}>\r\n          <p className=\"list-item\">\r\n            <Link\r\n              to=\"/\"\r\n              style={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n            >\r\n              Home\r\n            </Link>\r\n          </p>\r\n\r\n          <p className=\"list-item\">\r\n            <Link\r\n              to=\"/about\"\r\n              style={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n            >\r\n              About\r\n            </Link>\r\n          </p>\r\n          <p className=\"list-item\">\r\n            <Link\r\n              to=\"/events\"\r\n              style={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n            >\r\n              Events\r\n            </Link>\r\n          </p>\r\n          <p className=\"list-item\">\r\n            <Link\r\n              to=\"/communities\"\r\n              style={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n            >\r\n              Communities\r\n            </Link>\r\n          </p>\r\n          {/* <p className=\"list-item\">\r\n            <Link\r\n              to=\"/members\"\r\n              style={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n            >\r\n              Members\r\n            </Link>\r\n          </p>\r\n          <p className=\"list-item\">\r\n            <Link\r\n              to=\"/\"\r\n              style={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n            >\r\n              Blog\r\n            </Link>\r\n          </p> */}\r\n        </div>\r\n        {/* <div\r\n          className=\"register\"\r\n          // onClick={() => {\r\n          //   onTrigger(true);\r\n          // }}\r\n        >\r\n          <Link\r\n            to=\"/regform\"\r\n            style={{ color: \"white\", textDecoration: \"none\" }}\r\n          >\r\n            <p className=\"register-text\">Register</p>\r\n          </Link>\r\n        </div> */}\r\n\r\n        {/* <div\r\n          className=\"button\"\r\n          // onClick={() => {\r\n          //   onTrigger(true);\r\n          // }}\r\n        >\r\n          <Link\r\n            to=\"/regform\"\r\n            style={{ color: \"white\", textDecoration: \"none\" }}\r\n          >\r\n            {\" \"}\r\n            <p className=\"register-text\">Register</p>\r\n          </Link>\r\n        </div> */}\r\n        <div\r\n          className=\"icon-div\"\r\n          onClick={() => {\r\n            onClicked(!clicked);\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faBars} className=\"icon\" />\r\n        </div>\r\n      </div>\r\n      {/* {event ? (\r\n        <Modal\r\n          title=\"orientation\"\r\n          close={() => {\r\n            onTrigger(false);\r\n          }}\r\n          imgUrl=\"https://i.ibb.co/hfh1k6s/Orientation.png\"\r\n        ></Modal>\r\n      ) : null} */}\r\n    </div>\r\n  );\r\n}\r\nexport default Navbar;\r\n","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\components\\Footer\\Footer.jsx",[],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\members\\Members.jsx",[],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\events\\Events.jsx",["160","161","162","163","164","165","166"],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\aboutUs\\AboutUs.jsx",[],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\components\\IconCard\\IconCard.js",[],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\components\\LinkPanel\\LinkPanel.jsx",[],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\events\\Card.jsx",["167","168","169","170"],"import React from \"react\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport \"./Events.css\";\r\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction CardPer() {\r\n  return (\r\n    <Card variant='outlined'>\r\n      <CardContent>\r\n        <Typography color='textSecondary' gutterBottom>\r\n          Word of the Day\r\n        </Typography>\r\n        <Typography variant='h5' component='h2'>\r\n          ben\r\n        </Typography>\r\n\r\n        <Typography color='textSecondary'>adjective</Typography>\r\n        <Typography variant='body2' component='p'>\r\n          well meaning and kindly.\r\n          <br />\r\n          {'\"a benevolent smile\"'}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size='small'>Learn More</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\nexport default CardPer;\r\n",["171","172"],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\events\\Paper.jsx",["173","174"],"import { Paper } from \"@material-ui/core\";\r\nimport { React, useState } from \"react\";\r\nimport \"./Events.css\";\r\n\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Modal from \"./Modal\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  paperStyle: {\r\n    backgroundColor: \"transparent\",\r\n    color: \"#a685e2\",\r\n    borderRadius: \"10px\",\r\n    width: \"76%\",\r\n    margin: \"auto\",\r\n    \"&:hover\": {\r\n      transform: \"scale(1.05)\",\r\n      cursor: \"pointer\",\r\n      zIndex: \"5\",\r\n      backgroundColor: \"#282051\",\r\n    },\r\n  },\r\n  Button: {\r\n    margin: \"0 auto\",\r\n\r\n    display: \"block\",\r\n    fontSize: \"0.7rem\",\r\n  },\r\n});\r\nfunction PaperPer(props) {\r\n  const classes = useStyles();\r\n\r\n  const history = useHistory();\r\n\r\n  const [isOpen, setOpen] = useState(false);\r\n  function onClicked() {\r\n    setOpen(true);\r\n    console.log(\"clicked\");\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Paper className={classes.paperStyle} elevation={15} variant=\"outline\">\r\n          <img src={props.picture} alt=\"event\" className=\"img-future\"></img>\r\n          <Typography variant=\"h6\" align=\"center\">\r\n            {props.title}\r\n          </Typography>\r\n          <Link to={props.link}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              className={classes.Button}\r\n              // onClick={() => history.push(\"/events/csgo\")}\r\n            >\r\n              Register\r\n            </Button>\r\n          </Link>\r\n        </Paper>\r\n      </div>\r\n      {isOpen ? (\r\n        <Modal\r\n          close={() => {\r\n            setOpen(false);\r\n          }}\r\n          title={props.title}\r\n          imgUrl={props.picture}\r\n          info={props.information}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\nexport default PaperPer;\r\n","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\events\\cardData.js",[],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\events\\Modal.jsx",["175","176"],"import { icon } from \"@fortawesome/fontawesome-svg-core\";\r\nimport React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport \"./Events.css\";\r\n\r\nfunction Modal(props) {\r\n  return ReactDom.createPortal(\r\n    <div className='modal-overlay'>\r\n      <div className='modal-ui'>\r\n        <div onClick={props.close}>\r\n          <i className='icon-modal'>⚔</i>\r\n        </div>\r\n        <h1 className='modal-heading'>{props.title}</h1>\r\n        <img className='modal-img' src={props.imgUrl}></img>\r\n        <p className='modal-para'>{props.info}</p>\r\n      </div>\r\n    </div>,\r\n    document.getElementById(\"portal\")\r\n  );\r\n}\r\nexport default Modal;\r\n","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\events\\PaperSec.jsx",[],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\communities\\Communities.jsx",[],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\communities\\Paper.jsx",["177","178"],"import { Paper } from \"@material-ui/core\";\r\nimport { React, useState } from \"react\";\r\nimport \"./communities.css\";\r\n\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Modal from \"./Modal\";\r\nconst useStyles = makeStyles({\r\n  paperStyle: {\r\n    backgroundColor: \"transparent\",\r\n    color: \"#a685e2\",\r\n    display: \"relative\",\r\n    borderRadius: \"10px\",\r\n    width: \"76%\",\r\n    margin: \"auto\",\r\n    \"&:hover\": {\r\n      transform: \"scale(1.05)\",\r\n      cursor: \"pointer\",\r\n      zIndex: \"5\",\r\n      backgroundColor: \"#282051\",\r\n    },\r\n  },\r\n  Button: {\r\n    bottom: \"0\",\r\n\r\n    display: \"absolute\",\r\n    fontSize: \"0.7rem\",\r\n  },\r\n});\r\nfunction PaperPer(props) {\r\n  const classes = useStyles();\r\n  const [isOpen, setOpen] = useState(false);\r\n  function onClicked() {\r\n    setOpen(true);\r\n    console.log(\"clicked\");\r\n  }\r\n  return (\r\n    <div>\r\n      <div onClick={onClicked}>\r\n        <Paper className={classes.paperStyle} elevation={15} variant='outline'>\r\n          <img src={props.picture} alt='event' className='img-future'></img>\r\n        </Paper>\r\n      </div>\r\n      {isOpen ? (\r\n        <Modal\r\n          close={() => {\r\n            setOpen(false);\r\n          }}\r\n          imgUrl={props.picture}\r\n          title={props.title}\r\n          discordLink={props.discord}\r\n          whatsappLink={props.whatsapp}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\nexport default PaperPer;\r\n","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\communities\\Modal.jsx",["179","180","181"],"import { icon } from \"@fortawesome/fontawesome-svg-core\";\r\nimport React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport \"./communities.css\";\r\nimport Whatsapp from \"../../assets/Vector.png\";\r\nimport Discord from \"../../assets/discord-icon.png\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faWhatsapp } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nfunction Modal(props) {\r\n  return ReactDom.createPortal(\r\n    <div className='modal-overlay'>\r\n      <div className='modal-ui'>\r\n        <div onClick={props.close}>\r\n          <i className='icon-modal'>⚔</i>\r\n        </div>\r\n\r\n        <img className='modal-img-community' src={props.imgUrl}></img>\r\n        <h1 className='modal-heading'>{props.title}</h1>\r\n        <p className='modal-para'>{props.info}</p>\r\n        <p className='para-icon'>Discord Link: </p>\r\n        <div>\r\n          <img src={Discord} alt='discord-icon' className='icons' />\r\n        </div>\r\n        <p className='para-icon'>Whatsapp Link: </p>\r\n        <div>\r\n          <img src={Whatsapp} alt='discord-icon' className='icons' />\r\n        </div>\r\n        <FontAwesomeIcon icon={[\"fab\", \"facebook-f\"]} />\r\n      </div>\r\n    </div>,\r\n    document.getElementById(\"portal\")\r\n  );\r\n}\r\nexport default Modal;\r\n","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\components\\footer\\Footer.jsx",[],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\home\\Home.jsx",["182"],"import React from \"react\";\r\nimport Banner from \"../../assets/ven-ban.png\";\r\nimport LinkPanel from \"../../components/LinkPanel/LinkPanel\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  IconButton,\r\n  InputBase,\r\n  makeStyles,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport icon1 from \"../../assets/icon1.png\";\r\nimport icon2 from \"../../assets/icon2.png\";\r\nimport icon3 from \"../../assets/icon3.png\";\r\nimport \"./Home.css\";\r\nimport IconCard from \"../../components/IconCard/IconCard\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    background: \"#33295F\",\r\n    width: \"35%\",\r\n    borderRadius: \"24px\",\r\n    padding: \"0 10px\",\r\n    margin: \"auto\",\r\n    \"&.MuiInputBase-root\": {\r\n      color: \"white\",\r\n    },\r\n    [theme.breakpoints.down(955)]: {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  button: {\r\n    backgroundColor: \"#b92941\",\r\n    borderRadius: \"12px\",\r\n    paddingLeft: \"5%\",\r\n    paddingRight: \"5%\",\r\n    fontSize: \"0.9rem\",\r\n    fontWeight: \"700\",\r\n    color: \"aliceblue\",\r\n    marginBottom: \"0.7rem\",\r\n    marginTop: \"0.7rem\",\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\nfunction Home() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      style={{ display: \"flex\", alignItems: \"center\", flexDirection: \"column\" }}\r\n    >\r\n      <img src={Banner} alt=\"Banner\" className=\"banner\" />\r\n\r\n      <LinkPanel />\r\n\r\n      {/* Icon divs start */}\r\n      <Grid container className=\"home-main-div\">\r\n        <IconCard\r\n          icon={icon1}\r\n          text=\"This subdivision of Venatus deals with outdoor gaming activities. This subdivision features originally created outdoor games, which are played by students in fests and events.\"\r\n        />\r\n        <IconCard\r\n          icon={icon2}\r\n          text=\" This subsection deals with ESports, students participate in several gaming competitions around the country and, moreover, host console/PC gaming competitions.\"\r\n        />\r\n        <IconCard\r\n          icon={icon3}\r\n          text=\"In Venatus we not only enhance our gaming skills but also learn management skills, innovate new ideas for games to engage students in experience other than studies.\"\r\n        />\r\n      </Grid>\r\n\r\n      {/* Icon divs end here */}\r\n\r\n      {/* Subscription email div starts here */}\r\n      <Grid container style={{ width: \"70%\" }}>\r\n        <Grid\r\n          item\r\n          sm={12}\r\n          container\r\n          justify=\"center\"\r\n          style={{ color: \"white\", textAlign: \"center\", marginBottom: \"4rem\" }}\r\n        >\r\n          <Grid item className=\"subscribe-div\">\r\n            <h1>Subscribe to our weekly newsletter</h1>\r\n          </Grid>\r\n          <Grid item sm={12}>\r\n            <Paper component=\"form\" className={classes.input}>\r\n              <InputBase\r\n                // className={classes.input}\r\n                placeholder=\"Email \"\r\n                inputProps={{ \"aria-label\": \"email\" }}\r\n                // value={searchTerm}\r\n                // onChange={handleSearch}\r\n\r\n                style={{ width: \"65%\", color: \"white\" }}\r\n              />\r\n              <Button className={classes.button}>Sign up</Button>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      {/* Subscription email div ends here */}\r\n    </div>\r\n  );\r\n}\r\nexport default Home;\r\n","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\components\\navbar\\Modal.jsx",["183","184","185","186","187","188"],"import { icon } from \"@fortawesome/fontawesome-svg-core\";\r\nimport React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport \"../../screens/communities/communities.css\";\r\nimport Whatsapp from \"../../assets/Vector.png\";\r\nimport Discord from \"../../assets/discord-icon.png\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faWhatsapp } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nfunction Modal(props) {\r\n  return ReactDom.createPortal(\r\n    <div className='modal-overlay'>\r\n      <div className='modal-ui'>\r\n        <div onClick={props.close}>\r\n          <i className='icon-modal'>⚔</i>\r\n        </div>\r\n\r\n        <img className='modal-img-navbar' src={props.imgUrl}></img>\r\n        <h1 className='modal-heading-navbar'> Orientation</h1>\r\n        <h1 className='modal-heading-navbar'> 9th January- 4pm</h1>\r\n\r\n        <p className='para-modal'>\r\n          <a href='https://bit.ly/3omp5W0' className='modal-link'>\r\n            Link to Microsoft Teams\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </div>,\r\n    document.getElementById(\"portal\")\r\n  );\r\n}\r\nexport default Modal;\r\n","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\form\\Form.js",["189","190","191","192","193","194","195","196","197"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid, makeStyles, TextField } from \"@material-ui/core\";\r\nimport firebase from \"../../firebase\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport GeneralFrom from \"./GeneralForm\";\r\nimport CsgoForm from \"./csgoForm/CsgoForm\";\r\n\r\n//Final form connected to firestore\r\nconst Form = () => {\r\n  return <GeneralFrom />;\r\n  // return <CsgoForm />;\r\n};\r\n\r\nexport default Form;\r\n","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\firebase.js",[],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\form\\GeneralForm.js",["198","199","200","201","202","203"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid, makeStyles, TextField, Button } from \"@material-ui/core\";\r\nimport firebase from \"../../firebase\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, ErrorMessage, Field, getIn, useFormik } from \"formik\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Form.css\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n    \"& .MuiFormLabel-root\": {\r\n      color: \"white\",\r\n    },\r\n    \"& .MuiInputBase-root\": {\r\n      color: \"white\",\r\n    },\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  error: {\r\n    margin: \"-5px 10px 0px\",\r\n    fontSize: \"0.8rem\",\r\n    color: \"red\",\r\n  },\r\n  longAnswer: {\r\n    width: \"50ch\",\r\n    display: \"block\",\r\n  },\r\n  formDiv: {\r\n    color: \"white\",\r\n    borderRadius: \"10px\",\r\n    width: \"80%\",\r\n    padding: \"20px\",\r\n    flexDirection: \"column\",\r\n    background: \"#92c7d461\",\r\n    \"& .MuiFilledInput-underline:after \": {\r\n      borderBottom: \"2px solid #0e0b1f\",\r\n    },\r\n    \"& .MuiInputLabel-formControl\": {\r\n      color: \"#0e0b1f\",\r\n    },\r\n    \"& .MuiInputBase-root\": {\r\n      color: \"white\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst General = () => {\r\n  const classes = useStyles();\r\n\r\n  const history = useHistory();\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const [activeTab, setActiveTab] = useState(\"\");\r\n\r\n  const handleActive = (tab) => {\r\n    setActiveTab(tab);\r\n  };\r\n\r\n  const [interest, setInterest] = useState({\r\n    isJuego: false,\r\n    isAlfresco: false,\r\n    isTech: false,\r\n    isPR: false,\r\n    isProd: false,\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setInterest({ ...interest, [event.target.name]: event.target.checked });\r\n    setActiveTab(\"\");\r\n  };\r\n\r\n  const [techFields, setTechFields] = useState({\r\n    app: false,\r\n    web: false,\r\n    ml: false,\r\n    design: false,\r\n    devops: false,\r\n  });\r\n\r\n  const handleTechChange = (event) => {\r\n    setTechFields({ ...techFields, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  // /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/\r\n  const phoneRegex = RegExp(/^\\+(?:[0-9] ?){6,14}[0-9]$/);\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string().required(\"*Required\"),\r\n    name: Yup.string().required(\"*Required\"),\r\n    phone: Yup.string()\r\n      .matches(phoneRegex, \"Invalid phone\")\r\n      .required(\"*Phone is required\"),\r\n    rollnum: Yup.string().required(\"*Required\"),\r\n    branch: Yup.string().required(\"*Required\"),\r\n    campus: Yup.string().required(\"*Required\"),\r\n    expInManagement: Yup.string().required(\"*Required\"),\r\n    expectationFromSoc: Yup.string().required(\"*Required\"),\r\n    whyVenatusHowContribute: Yup.string().required(\"*Required\"),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      name: \"\",\r\n      phone: \"\",\r\n      rollnum: \"\",\r\n      branch: \"\",\r\n      campus: \"\",\r\n      expInManagement: \"\",\r\n      expectationFromSoc: \"\",\r\n      whyVenatusHowContribute: \"\",\r\n      whyJuego: \"\",\r\n      gamerTag: \"\",\r\n      platform: \"\",\r\n      designGame: \"\",\r\n      whyTech: \"\",\r\n      expectations: \"\",\r\n      github: \"\",\r\n      techStack: \"\",\r\n      problemSolved: \"\",\r\n      experienceProd: \"\",\r\n      prevWork: \"\",\r\n      experiencePR: \"\",\r\n      strategies: \"\",\r\n    },\r\n    validationSchema,\r\n    onSubmit: async (values, { resetForm }) => {\r\n      const general = {\r\n        email: values.email,\r\n        name: values.name,\r\n        phone: values.phone,\r\n        rollnum: values.rollnum,\r\n        branch: values.branch,\r\n        campus: values.campus,\r\n        expInManagement: values.expInManagement,\r\n        expectationFromSoc: values.expectationFromSoc,\r\n        whyVenatusHowContribute: values.whyVenatusHowContribute,\r\n      };\r\n      const juego = {\r\n        whyJuego: values.whyJuego,\r\n        gamerTag: values.gamerTag,\r\n        platform: values.platform,\r\n      };\r\n      const alfresco = {\r\n        designGame: values.designGame,\r\n      };\r\n      const tech = {\r\n        whyTech: values.whyTech,\r\n        expectations: values.expectations,\r\n        github: values.github,\r\n        techStack: values.techStack,\r\n        problemSolved: values.problemSolved,\r\n        interests: techFields,\r\n      };\r\n      const production = {\r\n        experience: values.experienceProd,\r\n        prevWork: values.prevWork,\r\n      };\r\n      const pr = {\r\n        experience: values.experiencePR,\r\n        strategies: values.strategies,\r\n      };\r\n\r\n      await db\r\n        .collection(\"users\")\r\n        .add(general)\r\n        .then(async (docRef) => {\r\n          if (interest.isJuego) {\r\n            await db\r\n              .collection(\"users\")\r\n              .doc(docRef.id)\r\n              .collection(\"juego\")\r\n              .add(juego);\r\n          }\r\n          if (interest.isAlfresco) {\r\n            await db\r\n              .collection(\"users\")\r\n              .doc(docRef.id)\r\n              .collection(\"alfresco\")\r\n              .add(alfresco);\r\n          }\r\n          if (interest.isTech) {\r\n            await db\r\n              .collection(\"users\")\r\n              .doc(docRef.id)\r\n              .collection(\"tech\")\r\n              .add(tech);\r\n          }\r\n          if (interest.isProd) {\r\n            await db\r\n              .collection(\"users\")\r\n              .doc(docRef.id)\r\n              .collection(\"production\")\r\n              .add(production);\r\n          }\r\n          if (interest.isPR) {\r\n            await db\r\n              .collection(\"users\")\r\n              .doc(docRef.id)\r\n              .collection(\"pr\")\r\n              .add(pr);\r\n          }\r\n          console.log(\"Registration successfull\");\r\n          resetForm();\r\n          setActiveTab(\"\");\r\n          setOpen(true);\r\n          setTimeout(() => {\r\n            history.push(\"/\");\r\n          }, 3000);\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      style={{ paddingTop: \"4.5rem\", minHeight: \"100vh\" }}\r\n      justify=\"center\"\r\n    >\r\n      <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          Registered Successfully!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Grid item container className={classes.formDiv}>\r\n        <h1 style={{ textAlign: \"center\", color: \"#ee9595\" }}>\r\n          Recruitment Form 2021\r\n        </h1>\r\n        <Grid container>\r\n          <Grid item sm={4}>\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n              <TextField\r\n                label=\"Email\"\r\n                color=\"secondary\"\r\n                helperText={formik.errors.email}\r\n                onChange={formik.handleChange}\r\n                value={formik.values.email}\r\n                error={\r\n                  formik.touched.email && formik.errors.email ? true : false\r\n                }\r\n                onBlur={formik.handleBlur}\r\n                name=\"email\"\r\n                id=\"email\"\r\n              />\r\n              <TextField\r\n                label=\"Name\"\r\n                color=\"secondary\"\r\n                helperText={formik.errors.name}\r\n                onChange={formik.handleChange}\r\n                value={formik.values.name}\r\n                error={formik.touched.name && formik.errors.name ? true : false}\r\n                onBlur={formik.handleBlur}\r\n                name=\"name\"\r\n                id=\"name\"\r\n              />\r\n\r\n              <TextField\r\n                helperText={formik.errors.phone}\r\n                onChange={formik.handleChange}\r\n                value={formik.values.phone}\r\n                error={\r\n                  formik.touched.phone && formik.errors.phone ? true : false\r\n                }\r\n                onBlur={formik.handleBlur}\r\n                name=\"phone\"\r\n                id=\"phone\"\r\n                label=\"Phone No.\"\r\n                color=\"secondary\"\r\n              />\r\n\r\n              <TextField\r\n                helperText={formik.errors.rollnum}\r\n                onChange={formik.handleChange}\r\n                value={formik.values.rollnum}\r\n                error={\r\n                  formik.touched.rollnum && formik.errors.rollnum ? true : false\r\n                }\r\n                onBlur={formik.handleBlur}\r\n                name=\"rollnum\"\r\n                id=\"rollnum\"\r\n                label=\"Roll No.\"\r\n                color=\"secondary\"\r\n              />\r\n\r\n              <TextField\r\n                helperText={formik.errors.branch}\r\n                onChange={formik.handleChange}\r\n                value={formik.values.branch}\r\n                error={\r\n                  formik.touched.branch && formik.errors.branch ? true : false\r\n                }\r\n                onBlur={formik.handleBlur}\r\n                name=\"branch\"\r\n                id=\"branch\"\r\n                label=\"Branch\"\r\n                color=\"secondary\"\r\n              />\r\n\r\n              <TextField\r\n                helperText={formik.errors.campus}\r\n                onChange={formik.handleChange}\r\n                value={formik.values.campus}\r\n                error={\r\n                  formik.touched.campus && formik.errors.campus ? true : false\r\n                }\r\n                onBlur={formik.handleBlur}\r\n                name=\"campus\"\r\n                id=\"campus\"\r\n                label=\"Campus\"\r\n                color=\"secondary\"\r\n              />\r\n              <p style={{ color: \"#ee9595\", fontWeight: \"500\" }}>\r\n                Select Department :-\r\n              </p>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={interest.isJuego}\r\n                    onChange={handleChange}\r\n                    name=\"isJuego\"\r\n                  />\r\n                }\r\n                label=\"Juego\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={interest.isAlfresco}\r\n                    onChange={handleChange}\r\n                    name=\"isAlfresco\"\r\n                  />\r\n                }\r\n                label=\"Alfresco\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={interest.isTech}\r\n                    onChange={handleChange}\r\n                    name=\"isTech\"\r\n                  />\r\n                }\r\n                label=\"Technical\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={interest.isProd}\r\n                    onChange={handleChange}\r\n                    name=\"isProd\"\r\n                  />\r\n                }\r\n                label=\"Production\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={interest.isPR}\r\n                    onChange={handleChange}\r\n                    name=\"isPR\"\r\n                  />\r\n                }\r\n                label=\"Public Relations\"\r\n              />\r\n              <p style={{ color: \"#ee9595\", fontWeight: \"500\" }}>\r\n                State if you have any prior experience in Event Management.\r\n              </p>\r\n              <TextField\r\n                id=\"quesend1\"\r\n                label=\"Answer\"\r\n                placeholder=\"Your answer here\"\r\n                name=\"expInManagement\"\r\n                variant=\"filled\"\r\n                rows={4}\r\n                multiline\r\n                className=\"smallMultiline\"\r\n                // style={{ width: \"40ch\" }}\r\n                onChange={formik.handleChange}\r\n                value={formik.values.expInManagement}\r\n                onBlur={formik.handleBlur}\r\n                error={\r\n                  formik.touched.expInManagement &&\r\n                  formik.errors.expInManagement\r\n                    ? true\r\n                    : false\r\n                }\r\n                helperText={formik.errors.expInManagement}\r\n              />\r\n              <p style={{ color: \"#ee9595\", fontWeight: \"500\" }}>\r\n                What are your expectations from this society?\r\n              </p>\r\n              <TextField\r\n                id=\"quesend2\"\r\n                label=\"Answer\"\r\n                placeholder=\"Your answer here\"\r\n                name=\"expectationFromSoc\"\r\n                variant=\"filled\"\r\n                rows={4}\r\n                multiline\r\n                className=\"smallMultiline\"\r\n                // style={{ width: \"40ch\" }}\r\n                onChange={formik.handleChange}\r\n                value={formik.values.expectationFromSoc}\r\n                onBlur={formik.handleBlur}\r\n                error={\r\n                  formik.touched.expectationFromSoc &&\r\n                  formik.errors.expectationFromSoc\r\n                    ? true\r\n                    : false\r\n                }\r\n                helperText={formik.errors.expectationFromSoc}\r\n              />\r\n              <p style={{ color: \"#ee9595\", fontWeight: \"500\" }}>\r\n                Why do you want to be a part of this society and how can you\r\n                contribute towards it?\r\n              </p>\r\n              <TextField\r\n                id=\"quesend3\"\r\n                label=\"Answer\"\r\n                placeholder=\"Your answer here\"\r\n                name=\"whyVenatusHowContribute\"\r\n                variant=\"filled\"\r\n                rows={4}\r\n                multiline\r\n                className=\"smallMultiline\"\r\n                // style={{ width: \"40ch\" }}\r\n                onChange={formik.handleChange}\r\n                value={formik.values.whyVenatusHowContribute}\r\n                onBlur={formik.handleBlur}\r\n                error={\r\n                  formik.touched.whyVenatusHowContribute &&\r\n                  formik.errors.whyVenatusHowContribute\r\n                    ? true\r\n                    : false\r\n                }\r\n                helperText={formik.errors.whyVenatusHowContribute}\r\n              />\r\n            </form>\r\n          </Grid>\r\n          <Grid item sm={8} container>\r\n            <Grid item xs={12} sm={1} className=\"buttonsDiv\">\r\n              <Button\r\n                disabled={!interest.isJuego}\r\n                name=\"juegoOn\"\r\n                onClick={() => {\r\n                  handleActive(\"juego\");\r\n                }}\r\n                className={\r\n                  activeTab === \"juego\" ? \"activeButton\" : \"interestButton\"\r\n                }\r\n                // style={{\r\n                //   color: \"#b92941\",\r\n                //   background: \"#0f0c1f\",\r\n                //   margin: \"10px 0px\",\r\n                //   fontWeight: \"800\",\r\n                // }}\r\n              >\r\n                <span\r\n                  style={{\r\n                    writingMode: \"vertical-rl\",\r\n                    textOrientation: \"upright\",\r\n                  }}\r\n                >\r\n                  Juego\r\n                </span>{\" \"}\r\n              </Button>\r\n              <Button\r\n                disabled={!interest.isAlfresco}\r\n                name=\"alfrescoOn\"\r\n                onClick={() => {\r\n                  handleActive(\"alfresco\");\r\n                }}\r\n                className={\r\n                  activeTab === \"alfresco\" ? \"activeButton\" : \"interestButton\"\r\n                }\r\n                // style={{\r\n                //   color: \"#b92941\",\r\n                //   background: \"#0f0c1f\",\r\n                //   margin: \"10px 0px\",\r\n                //   fontWeight: \"800\",\r\n                // }}\r\n              >\r\n                <span\r\n                  style={{\r\n                    writingMode: \"vertical-rl\",\r\n                    textOrientation: \"upright\",\r\n                  }}\r\n                >\r\n                  Alfresco\r\n                </span>{\" \"}\r\n              </Button>\r\n              <Button\r\n                disabled={!interest.isTech}\r\n                name=\"techOn\"\r\n                onClick={() => {\r\n                  handleActive(\"tech\");\r\n                }}\r\n                className={\r\n                  activeTab === \"tech\" ? \"activeButton\" : \"interestButton\"\r\n                }\r\n                // style={{\r\n                //   color: \"#b92941\",\r\n                //   background: \"#0f0c1f\",\r\n                //   margin: \"10px 0px\",\r\n                //   fontWeight: \"800\",\r\n                // }}\r\n              >\r\n                <span\r\n                  style={{\r\n                    writingMode: \"vertical-rl\",\r\n                    textOrientation: \"upright\",\r\n                  }}\r\n                >\r\n                  Tech\r\n                </span>{\" \"}\r\n              </Button>\r\n              <Button\r\n                disabled={!interest.isProd}\r\n                name=\"prodOn\"\r\n                onClick={() => {\r\n                  handleActive(\"prod\");\r\n                }}\r\n                className={\r\n                  activeTab === \"prod\" ? \"activeButton\" : \"interestButton\"\r\n                }\r\n                // style={{\r\n                //   color: \"#b92941\",\r\n                //   background: \"#0f0c1f\",\r\n                //   margin: \"10px 0px\",\r\n                //   fontWeight: \"800\",\r\n                // }}\r\n              >\r\n                <span\r\n                  style={{\r\n                    writingMode: \"vertical-rl\",\r\n                    textOrientation: \"upright\",\r\n                  }}\r\n                >\r\n                  Production\r\n                </span>{\" \"}\r\n              </Button>\r\n              <Button\r\n                disabled={!interest.isPR}\r\n                name=\"prOn\"\r\n                onClick={() => {\r\n                  handleActive(\"pr\");\r\n                }}\r\n                className={\r\n                  activeTab === \"pr\" ? \"activeButton\" : \"interestButton\"\r\n                }\r\n                // style={{\r\n                //   color: activeTab === \"pr\"? \"#0f0c1f\":\"#b92941\",\r\n                //   background: \"#0f0c1f\",\r\n                //   margin: \"10px 0px\",\r\n                //   fontWeight: \"800\",\r\n                // }}\r\n              >\r\n                <span\r\n                  style={{\r\n                    writingMode: \"vertical-rl\",\r\n                    textOrientation: \"upright\",\r\n                  }}\r\n                >\r\n                  PR Dept\r\n                </span>{\" \"}\r\n              </Button>\r\n            </Grid>\r\n            <Grid item sm={11} style={{ padding: \"0px 20px\", width: \"100%\" }}>\r\n              {activeTab === \"juego\" ? (\r\n                <div>\r\n                  <p>Briefly state why you picked juego?</p>\r\n                  <TextField\r\n                    id=\"ques1\"\r\n                    label=\"Answer\"\r\n                    placeholder=\"Your answer here\"\r\n                    name=\"whyJuego\"\r\n                    variant=\"filled\"\r\n                    rows={4}\r\n                    multiline\r\n                    className=\"largeMultiline\"\r\n                    // style={{ width: \"80ch\" }}\r\n                    helperText={\r\n                      interest.isJuego && formik.values.whyJuego === \"\"\r\n                        ? \"*Required\"\r\n                        : null\r\n                    }\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.whyJuego}\r\n                    error={\r\n                      interest.isJuego && formik.values.whyJuego === \"\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    onBlur={formik.handleBlur}\r\n                  />\r\n                  <p>Mention Your Gamer Tag along with Web Link</p>\r\n                  <TextField\r\n                    id=\"ques2\"\r\n                    label=\"Answer\"\r\n                    placeholder=\"Your answer here\"\r\n                    name=\"gamerTag\"\r\n                    variant=\"filled\"\r\n                    rows={2}\r\n                    multiline\r\n                    className=\"largeMultiline\"\r\n                    // style={{ width: \"80ch\" }}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.gamerTag}\r\n                    error={\r\n                      interest.isJuego && formik.values.gamerTag === \"\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    helperText={\r\n                      interest.isJuego && formik.values.gamerTag === \"\"\r\n                        ? \"*Required\"\r\n                        : null\r\n                    }\r\n                    onBlur={formik.handleBlur}\r\n                  />\r\n                  <p>\r\n                    Which platform in gaming do you prefer/ have prior\r\n                    experience in?\r\n                  </p>\r\n                  <TextField\r\n                    id=\"ques3\"\r\n                    label=\"Answer\"\r\n                    placeholder=\"Your answer here\"\r\n                    name=\"platform\"\r\n                    variant=\"filled\"\r\n                    rows={2}\r\n                    multiline\r\n                    className=\"largeMultiline\"\r\n                    // style={{ width: \"80ch\" }}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.platform}\r\n                    onBlur={formik.handleBlur}\r\n                    error={\r\n                      interest.isJuego && formik.values.platform === \"\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    helperText={\r\n                      interest.isJuego && formik.values.platform === \"\"\r\n                        ? \"*Required\"\r\n                        : null\r\n                    }\r\n                  />\r\n                </div>\r\n              ) : activeTab === \"alfresco\" ? (\r\n                <div>\r\n                  <p>\r\n                    Prepare the Design and Execution of an outdoor game where\r\n                    you convert a classic board game or a pen-paper game like\r\n                    (Tic TAC Toe or Chess etc.) into a life-size version. You\r\n                    have to keep in mind, how you will maintain the crowd, will\r\n                    it be a team challenge or a solo play, what all props you\r\n                    will need etc.\r\n                  </p>\r\n                  <TextField\r\n                    id=\"ques4\"\r\n                    label=\"Answer\"\r\n                    placeholder=\"Your answer here\"\r\n                    name=\"designGame\"\r\n                    variant=\"filled\"\r\n                    rows={8}\r\n                    multiline\r\n                    className=\"largeMultiline\"\r\n                    // style={{ width: \"80ch\" }}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.designGame}\r\n                    onBlur={formik.handleBlur}\r\n                    error={\r\n                      interest.isAlfresco && formik.values.designGame === \"\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    helperText={\r\n                      interest.isAlfresco && formik.values.designGame === \"\"\r\n                        ? \"*Required\"\r\n                        : null\r\n                    }\r\n                  />\r\n                </div>\r\n              ) : activeTab === \"tech\" ? (\r\n                <div>\r\n                  <p>Why do you want to join tech department?</p>\r\n                  <TextField\r\n                    id=\"ques5\"\r\n                    label=\"Answer\"\r\n                    placeholder=\"Your answer here\"\r\n                    name=\"whyTech\"\r\n                    variant=\"filled\"\r\n                    rows={4}\r\n                    multiline\r\n                    className=\"largeMultiline\"\r\n                    // style={{ width: \"80ch\" }}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.whyTech}\r\n                    onBlur={formik.handleBlur}\r\n                    error={\r\n                      interest.isTech && formik.values.whyTech === \"\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    helperText={\r\n                      interest.isTech && formik.values.whyTech === \"\"\r\n                        ? \"*Required\"\r\n                        : null\r\n                    }\r\n                  />\r\n\r\n                  <p>What do you expect from tech department?</p>\r\n                  <TextField\r\n                    id=\"ques6\"\r\n                    label=\"Answer\"\r\n                    placeholder=\"Your answer here\"\r\n                    name=\"expectations\"\r\n                    variant=\"filled\"\r\n                    rows={4}\r\n                    multiline\r\n                    className=\"largeMultiline\"\r\n                    // style={{ width: \"80ch\" }}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.expectations}\r\n                    onBlur={formik.handleBlur}\r\n                    error={\r\n                      interest.isTech && formik.values.expectations === \"\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    helperText={\r\n                      interest.isTech && formik.values.expectations === \"\"\r\n                        ? \"*Required\"\r\n                        : null\r\n                    }\r\n                  />\r\n\r\n                  <p>Github Link</p>\r\n                  <TextField\r\n                    id=\"ques7\"\r\n                    label=\"Answer\"\r\n                    placeholder=\"Your answer here\"\r\n                    name=\"github\"\r\n                    variant=\"filled\"\r\n                    multiline\r\n                    className=\"largeMultiline\"\r\n                    // style={{ width: \"80ch\" }}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.github}\r\n                    onBlur={formik.handleBlur}\r\n                    // error={\r\n                    //   interest.isTech && formik.values.github === \"\"\r\n                    //     ? true\r\n                    //     : false\r\n                    // }\r\n                    // helperText={\r\n                    //   interest.isTech && formik.values.github === \"\"\r\n                    //     ? \"*Required\"\r\n                    //     : null\r\n                    // }\r\n                  />\r\n\r\n                  <p>What is your curent tech stack?</p>\r\n                  <TextField\r\n                    id=\"ques8\"\r\n                    label=\"Answer\"\r\n                    placeholder=\"Your answer here\"\r\n                    name=\"techStack\"\r\n                    variant=\"filled\"\r\n                    rows={2}\r\n                    multiline\r\n                    className=\"largeMultiline\"\r\n                    // style={{ width: \"80ch\" }}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.techStack}\r\n                    onBlur={formik.handleBlur}\r\n                    error={\r\n                      interest.isTech && formik.values.techStack === \"\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    helperText={\r\n                      interest.isTech && formik.values.techStack === \"\"\r\n                        ? \"*Required\"\r\n                        : null\r\n                    }\r\n                  />\r\n                  <p>\r\n                    Explain an interesting problem you solved using programming.\r\n                  </p>\r\n                  <TextField\r\n                    id=\"ques9\"\r\n                    label=\"Answer\"\r\n                    placeholder=\"Your answer here\"\r\n                    name=\"problemSolved\"\r\n                    variant=\"filled\"\r\n                    rows={5}\r\n                    multiline\r\n                    className=\"largeMultiline\"\r\n                    // style={{ width: \"80ch\" }}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.problemSolved}\r\n                    onBlur={formik.handleBlur}\r\n                    error={\r\n                      interest.isTech && formik.values.problemSolved === \"\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    helperText={\r\n                      interest.isTech && formik.values.problemSolved === \"\"\r\n                        ? \"*Required\"\r\n                        : null\r\n                    }\r\n                  />\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={techFields.app}\r\n                        onChange={handleTechChange}\r\n                        name=\"app\"\r\n                      />\r\n                    }\r\n                    label=\"App Dev.\"\r\n                  />\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={techFields.web}\r\n                        onChange={handleTechChange}\r\n                        name=\"web\"\r\n                      />\r\n                    }\r\n                    label=\"Web Dev.\"\r\n                  />\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={techFields.ml}\r\n                        onChange={handleTechChange}\r\n                        name=\"ml\"\r\n                      />\r\n                    }\r\n                    label=\"Machine Learning\"\r\n                  />\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={techFields.design}\r\n                        onChange={handleTechChange}\r\n                        name=\"design\"\r\n                      />\r\n                    }\r\n                    label=\"Designing\"\r\n                  />\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={techFields.devops}\r\n                        onChange={handleTechChange}\r\n                        name=\"devops\"\r\n                      />\r\n                    }\r\n                    label=\"Devops\"\r\n                  />\r\n                </div>\r\n              ) : activeTab === \"prod\" ? (\r\n                <div>\r\n                  <p>\r\n                    Mention any prior experience in group discussion or content\r\n                    writing.\r\n                  </p>\r\n                  <TextField\r\n                    id=\"ques10\"\r\n                    label=\"Answer\"\r\n                    placeholder=\"Your answer here\"\r\n                    name=\"experienceProd\"\r\n                    variant=\"filled\"\r\n                    rows={4}\r\n                    multiline\r\n                    className=\"largeMultiline\"\r\n                    // style={{ width: \"80ch\" }}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.experienceProd}\r\n                    onBlur={formik.handleBlur}\r\n                    // error={\r\n                    //   interest.isProd && formik.values.experienceProd === \"\"\r\n                    //     ? true\r\n                    //     : false\r\n                    // }\r\n                    // helperText={\r\n                    //   interest.isProd && formik.values.experienceProd === \"\"\r\n                    //     ? \"*Required\"\r\n                    //     : null\r\n                    // }\r\n                  />\r\n                  <p>Add links to your existing works here.(If any)</p>\r\n                  <TextField\r\n                    id=\"ques11\"\r\n                    label=\"Answer\"\r\n                    placeholder=\"Your answer here\"\r\n                    name=\"prevWork\"\r\n                    variant=\"filled\"\r\n                    rows={4}\r\n                    multiline\r\n                    className=\"largeMultiline\"\r\n                    // style={{ width: \"80ch\" }}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.prevWork}\r\n                    onBlur={formik.handleBlur}\r\n                  />\r\n                </div>\r\n              ) : activeTab === \"pr\" ? (\r\n                <div>\r\n                  <p>\r\n                    Mention any prior experience in public relations. (If any)\r\n                  </p>\r\n                  <TextField\r\n                    id=\"ques12\"\r\n                    label=\"Answer\"\r\n                    placeholder=\"Your answer here\"\r\n                    name=\"experiencePR\"\r\n                    variant=\"filled\"\r\n                    rows={4}\r\n                    multiline\r\n                    className=\"largeMultiline\"\r\n                    // style={{ width: \"80ch\" }}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.experiencePR}\r\n                    onBlur={formik.handleBlur}\r\n                  />\r\n                  <p>\r\n                    What publicising strategies you\\'ll follow for a college\r\n                    level event?\r\n                  </p>\r\n                  <TextField\r\n                    id=\"ques13\"\r\n                    label=\"Answer\"\r\n                    placeholder=\"Your answer here\"\r\n                    name=\"strategies\"\r\n                    variant=\"filled\"\r\n                    rows={4}\r\n                    multiline\r\n                    className=\"largeMultiline\"\r\n                    // style={{ width: \"80ch\" }}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.strategies}\r\n                    onBlur={formik.handleBlur}\r\n                    error={\r\n                      interest.isPR && formik.values.strategies === \"\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    helperText={\r\n                      interest.isPR && formik.values.strategies === \"\"\r\n                        ? \"*Required\"\r\n                        : null\r\n                    }\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <h3>\r\n                  Click on the department tab after selecting from the checkbox\r\n                </h3>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Button\r\n          style={{\r\n            width: \"200px\",\r\n            height: \"50px\",\r\n            color: \"#0e0b1f\",\r\n            background: \"#b92941\",\r\n            fontWeight: \"600\",\r\n            fontSize: \"20px\",\r\n            margin: \"20px auto\",\r\n          }}\r\n          onClick={formik.handleSubmit}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default General;\r\n","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\form\\csgoForm\\CsgoForm.js",["204","205","206","207","208","209","210","211","212","213"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid, makeStyles, TextField, Button } from \"@material-ui/core\";\r\nimport firebase from \"../../../firebase\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, ErrorMessage, Field, getIn, useFormik, Form } from \"formik\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport background from \"../../../assets/csgo.jpg\";\r\nimport styles from \"./csgo.module.css\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n    \"& .MuiFormLabel-root\": {\r\n      color: \"white\",\r\n    },\r\n    \"& .MuiInputBase-root\": {\r\n      color: \"white\",\r\n    },\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  error: {\r\n    margin: \"-5px 10px 0px\",\r\n    fontSize: \"0.8rem\",\r\n    color: \"red\",\r\n  },\r\n  longAnswer: {\r\n    width: \"50ch\",\r\n    display: \"block\",\r\n  },\r\n  formDiv: {\r\n    color: \"white\",\r\n    borderRadius: \"10px\",\r\n    width: \"80%\",\r\n    padding: \"20px\",\r\n    backgroundSize: \"100% 100%\",\r\n    backgroundPosition: \"top\",\r\n    backgroundImage: `linear-gradient(to right,#00000073, #231d06e8), url(${background})`,\r\n    \"& .MuiFilledInput-underline:after \": {\r\n      borderBottom: \"2px solid #0e0b1f\",\r\n    },\r\n    \"& .MuiInputLabel-formControl\": {\r\n      color: \"#8bea9c\",\r\n    },\r\n    \"& .MuiInputBase-root\": {\r\n      color: \"#8bc0da\",\r\n    },\r\n    \"& .MuiFormControl-root\": {\r\n      marginRight: \"30px\",\r\n    },\r\n    \"@media (max-width:955px)\": {\r\n      width: \"100%\",\r\n      textAlign: \"center\",\r\n    },\r\n  },\r\n  label: {\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: \"500\",\r\n  },\r\n}));\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst CsgoForm = () => {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const phoneRegex = RegExp(/^\\+(?:[0-9] ?){6,14}[0-9]$/);\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    teamName: Yup.string().required(\"*Required\"),\r\n    captName: Yup.string().required(\"*Required\"),\r\n    captPhoneNo: Yup.string()\r\n      .matches(phoneRegex, \"Invalid phone\")\r\n      .required(\"*Phone is required\"),\r\n    captRollNo: Yup.string().required(\"*Required\"),\r\n    player2: Yup.string().required(\"*Required\"),\r\n    player2RollNum: Yup.string().required(\"*Required\"),\r\n    player3: Yup.string().required(\"*Required\"),\r\n    player3RollNum: Yup.string().required(\"*Required\"),\r\n    player4: Yup.string().required(\"*Required\"),\r\n    player4RollNum: Yup.string().required(\"*Required\"),\r\n    player5: Yup.string().required(\"*Required\"),\r\n    player5RollNum: Yup.string().required(\"*Required\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      teamName: \"\",\r\n      captName: \"\",\r\n      captRollNo: \"\",\r\n      captPhoneNo: \"\",\r\n      player2: \"\",\r\n      player2RollNum: \"\",\r\n      player3: \"\",\r\n      player3RollNum: \"\",\r\n      player4: \"\",\r\n      player4RollNum: \"\",\r\n      player5: \"\",\r\n      player5RollNum: \"\",\r\n    },\r\n\r\n    validationSchema,\r\n    onSubmit: async (values, { resetForm }) => {\r\n      console.log(values);\r\n      db.collection(\"csgoFW\")\r\n        .add(values)\r\n        .then(() => {\r\n          console.log(\"registered successfully\");\r\n\r\n          resetForm();\r\n          setOpen(true);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      style={{ paddingTop: \"4.5rem\", minHeight: \"100vh\" }}\r\n      justify=\"center\"\r\n    >\r\n      <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          Registered Successfully!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Grid item container className={classes.formDiv} justify=\"flex-end\">\r\n        <Grid\r\n          item\r\n          sm={12}\r\n          style={{ height: \"10%\", textAlign: \"center\", width: \"100%\" }}\r\n        >\r\n          <h1>CSGO 5v5 SCRIM</h1>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={7}\r\n          className={styles.rollDiv}\r\n          container\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item>\r\n            <Button\r\n              style={{\r\n                color: \"white\",\r\n                background: \"tomato\",\r\n                fontSize: \"1.3rem\",\r\n                fontWeight: \"700\",\r\n              }}\r\n              onClick={formik.handleSubmit}\r\n            >\r\n              Let's Roll\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} sm={5} style={{ height: \"90%\", padding: \"10px\" }}>\r\n          <TextField\r\n            label=\"Team Name\"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.teamName}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.teamName}\r\n            error={\r\n              formik.touched.teamName && formik.errors.teamName ? true : false\r\n            }\r\n            onBlur={formik.handleBlur}\r\n            name=\"teamName\"\r\n            id=\"teamName\"\r\n          />\r\n          <TextField\r\n            label=\"Phone No.\"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.captPhoneNo}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.captPhoneNo}\r\n            error={\r\n              formik.touched.captPhoneNo && formik.errors.captPhoneNo\r\n                ? true\r\n                : false\r\n            }\r\n            onBlur={formik.handleBlur}\r\n            name=\"captPhoneNo\"\r\n            id=\"captPhoneNo\"\r\n          />\r\n          <p className={classes.label}>Player 1(Captain)</p>\r\n\r\n          <TextField\r\n            label=\"Name\"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.captName}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.captName}\r\n            error={\r\n              formik.touched.captName && formik.errors.captName ? true : false\r\n            }\r\n            onBlur={formik.handleBlur}\r\n            name=\"captName\"\r\n            id=\"captName\"\r\n          />\r\n          <TextField\r\n            label=\"Roll No.\"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.captRollNo}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.captRollNo}\r\n            error={\r\n              formik.touched.captRollNo && formik.errors.captRollNo\r\n                ? true\r\n                : false\r\n            }\r\n            onBlur={formik.handleBlur}\r\n            name=\"captRollNo\"\r\n            id=\"captRollNo\"\r\n          />\r\n\r\n          <p className={classes.label}>Player 2</p>\r\n          <TextField\r\n            label=\"Name \"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.player2}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.player2}\r\n            error={\r\n              formik.touched.player2 && formik.errors.player2 ? true : false\r\n            }\r\n            onBlur={formik.handleBlur}\r\n            name=\"player2\"\r\n            id=\"player2\"\r\n          />\r\n          <TextField\r\n            label=\"Roll No.\"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.player2RollNum}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.player2RollNum}\r\n            error={\r\n              formik.touched.player2RollNum && formik.errors.player2RollNum\r\n                ? true\r\n                : false\r\n            }\r\n            onBlur={formik.handleBlur}\r\n            name=\"player2RollNum\"\r\n            id=\"player2RollNum\"\r\n          />\r\n          <p className={classes.label}>Player 3</p>\r\n          <TextField\r\n            label=\"Name\"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.player3}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.player3}\r\n            error={\r\n              formik.touched.player3 && formik.errors.player3 ? true : false\r\n            }\r\n            onBlur={formik.handleBlur}\r\n            name=\"player3\"\r\n            id=\"player3\"\r\n          />\r\n          <TextField\r\n            label=\"Roll No.\"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.player3RollNum}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.player3RollNum}\r\n            error={\r\n              formik.touched.player3RollNum && formik.errors.player3RollNum\r\n                ? true\r\n                : false\r\n            }\r\n            onBlur={formik.handleBlur}\r\n            name=\"player3RollNum\"\r\n            id=\"player3RollNum\"\r\n          />\r\n          <p className={classes.label}>Player 4</p>\r\n          <TextField\r\n            label=\"Name\"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.player4}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.player4}\r\n            error={\r\n              formik.touched.player4 && formik.errors.player4 ? true : false\r\n            }\r\n            onBlur={formik.handleBlur}\r\n            name=\"player4\"\r\n            id=\"player4\"\r\n          />\r\n          <TextField\r\n            label=\"Roll No.\"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.player4RollNum}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.player4RollNum}\r\n            error={\r\n              formik.touched.player4RollNum && formik.errors.player4RollNum\r\n                ? true\r\n                : false\r\n            }\r\n            onBlur={formik.handleBlur}\r\n            name=\"player4RollNum\"\r\n            id=\"player4RollNum\"\r\n          />\r\n          <p className={classes.label}>Player 5</p>\r\n          <TextField\r\n            label=\"Name\"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.player5}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.player5}\r\n            error={\r\n              formik.touched.player5 && formik.errors.player5 ? true : false\r\n            }\r\n            onBlur={formik.handleBlur}\r\n            name=\"player5\"\r\n            id=\"player5\"\r\n          />\r\n          <TextField\r\n            label=\"Roll No.\"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.player5RollNum}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.player5RollNum}\r\n            error={\r\n              formik.touched.player5RollNum && formik.errors.player5RollNum\r\n                ? true\r\n                : false\r\n            }\r\n            onBlur={formik.handleBlur}\r\n            name=\"player5RollNum\"\r\n            id=\"player5RollNum\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CsgoForm;\r\n","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\form\\csgoForm\\CsgoForm1v1.js",["214","215","216","217","218","219","220","221","222","223"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid, makeStyles, TextField, Button } from \"@material-ui/core\";\r\nimport firebase from \"../../../firebase\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, ErrorMessage, Field, getIn, useFormik, Form } from \"formik\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport background from \"../../../assets/csgo1.jpg\";\r\nimport styles from \"./csgo.module.css\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n    \"& .MuiFormLabel-root\": {\r\n      color: \"white\",\r\n    },\r\n    \"& .MuiInputBase-root\": {\r\n      color: \"white\",\r\n    },\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  error: {\r\n    margin: \"-5px 10px 0px\",\r\n    fontSize: \"0.8rem\",\r\n    color: \"red\",\r\n  },\r\n  formDiv: {\r\n    color: \"white\",\r\n    borderRadius: \"10px\",\r\n    width: \"80%\",\r\n    padding: \"20px\",\r\n    backgroundSize: \"100% 100%\",\r\n    backgroundPosition: \"top\",\r\n    backgroundImage: `linear-gradient(to right,#00000073, #231d06e8), url(${background})`,\r\n    \"& .MuiFilledInput-underline:after \": {\r\n      borderBottom: \"2px solid #0e0b1f\",\r\n    },\r\n    \"& .MuiInputLabel-formControl\": {\r\n      color: \"#8bea9c\",\r\n    },\r\n    \"& .MuiInputBase-root\": {\r\n      color: \"#8bc0da\",\r\n    },\r\n    \"& .MuiFormControl-root\": {\r\n      marginRight: \"30px\",\r\n      marginTop: \"40px\",\r\n      display: \"block\",\r\n    },\r\n    \"@media (max-width:955px)\": {\r\n      width: \"100%\",\r\n      textAlign: \"center\",\r\n    },\r\n  },\r\n  label: {\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: \"500\",\r\n  },\r\n}));\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst CsgoForm1v1 = () => {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const phoneRegex = RegExp(/^\\+(?:[0-9] ?){6,14}[0-9]$/);\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    teamName: Yup.string().required(\"*Required\"),\r\n    captName: Yup.string().required(\"*Required\"),\r\n    captPhoneNo: Yup.string()\r\n      .matches(phoneRegex, \"Invalid phone\")\r\n      .required(\"*Phone is required\"),\r\n    captRollNo: Yup.string().required(\"*Required\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      teamName: \"\",\r\n      captName: \"\",\r\n      captRollNo: \"\",\r\n      captPhoneNo: \"\",\r\n    },\r\n\r\n    validationSchema,\r\n    onSubmit: async (values, { resetForm }) => {\r\n      console.log(values);\r\n      db.collection(\"csgoFW1v1\")\r\n        .add(values)\r\n        .then(() => {\r\n          console.log(\"registered successfully\");\r\n\r\n          resetForm();\r\n          setOpen(true);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      style={{ paddingTop: \"4.5rem\", minHeight: \"100vh\" }}\r\n      justify=\"center\"\r\n    >\r\n      <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          Registered Successfully!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Grid item container className={classes.formDiv} justify=\"flex-end\">\r\n        <Grid\r\n          item\r\n          sm={12}\r\n          style={{ height: \"10%\", textAlign: \"center\", width: \"100%\" }}\r\n        >\r\n          <h1>CSGO 1v1 SCRIM</h1>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={7}\r\n          className={styles.rollDiv}\r\n          container\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item>\r\n            <Button\r\n              style={{\r\n                color: \"white\",\r\n                background: \"tomato\",\r\n                fontSize: \"1.3rem\",\r\n                fontWeight: \"700\",\r\n              }}\r\n              onClick={formik.handleSubmit}\r\n            >\r\n              Let's Roll\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} sm={5} style={{ height: \"90%\", padding: \"10px\" }}>\r\n          <TextField\r\n            label=\"Team Name\"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.teamName}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.teamName}\r\n            error={\r\n              formik.touched.teamName && formik.errors.teamName ? true : false\r\n            }\r\n            onBlur={formik.handleBlur}\r\n            name=\"teamName\"\r\n            id=\"teamName\"\r\n          />\r\n          <TextField\r\n            label=\"Phone No.(with country code)\"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.captPhoneNo}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.captPhoneNo}\r\n            error={\r\n              formik.touched.captPhoneNo && formik.errors.captPhoneNo\r\n                ? true\r\n                : false\r\n            }\r\n            onBlur={formik.handleBlur}\r\n            name=\"captPhoneNo\"\r\n            id=\"captPhoneNo\"\r\n          />\r\n          <TextField\r\n            label=\"Name\"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.captName}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.captName}\r\n            error={\r\n              formik.touched.captName && formik.errors.captName ? true : false\r\n            }\r\n            onBlur={formik.handleBlur}\r\n            name=\"captName\"\r\n            id=\"captName\"\r\n          />\r\n          <TextField\r\n            label=\"Roll No.\"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.captRollNo}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.captRollNo}\r\n            error={\r\n              formik.touched.captRollNo && formik.errors.captRollNo\r\n                ? true\r\n                : false\r\n            }\r\n            onBlur={formik.handleBlur}\r\n            name=\"captRollNo\"\r\n            id=\"captRollNo\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CsgoForm1v1;\r\n","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\form\\codmform\\CodmForm1v1.js",["224","225","226","227","228","229","230","231","232","233"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid, makeStyles, TextField, Button } from \"@material-ui/core\";\r\nimport firebase from \"../../../firebase\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, ErrorMessage, Field, getIn, useFormik, Form } from \"formik\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport background from \"../../../assets/codm-bg.jpg\";\r\nimport styles from \"./codm.module.css\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n    \"& .MuiFormLabel-root\": {\r\n      color: \"white\",\r\n    },\r\n    \"& .MuiInputBase-root\": {\r\n      color: \"white\",\r\n    },\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  error: {\r\n    margin: \"-5px 10px 0px\",\r\n    fontSize: \"0.8rem\",\r\n    color: \"red\",\r\n  },\r\n  formDiv: {\r\n    color: \"white\",\r\n    borderRadius: \"10px\",\r\n    width: \"80%\",\r\n    padding: \"20px\",\r\n    backgroundSize: \"100% 100%\",\r\n    backgroundPosition: \"top\",\r\n    backgroundImage: `linear-gradient(to right,#00000073, #231d06e8), url(${background})`,\r\n    \"& .MuiFilledInput-underline:after \": {\r\n      borderBottom: \"2px solid #0e0b1f\",\r\n    },\r\n    \"& .MuiInputLabel-formControl\": {\r\n      color: \"#8bea9c\",\r\n    },\r\n    \"& .MuiInputBase-root\": {\r\n      color: \"#8bc0da\",\r\n    },\r\n    \"& .MuiFormControl-root\": {\r\n      marginRight: \"30px\",\r\n      marginTop: \"40px\",\r\n      display: \"block\",\r\n    },\r\n    \"@media (max-width:955px)\": {\r\n      width: \"100%\",\r\n      textAlign: \"center\",\r\n    },\r\n  },\r\n  label: {\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: \"500\",\r\n  },\r\n}));\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst CodmForm1v1 = () => {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const phoneRegex = RegExp(/^\\+(?:[0-9] ?){6,14}[0-9]$/);\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    name: Yup.string().required(\"*Required\"),\r\n    gamingName: Yup.string().required(\"*Required\"),\r\n    phone: Yup.string()\r\n      .matches(phoneRegex, \"Invalid phone\")\r\n      .required(\"*Phone is required\"),\r\n    level: Yup.string().required(\"*Required\"),\r\n    maxRank: Yup.string().required(\"*Required\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      gamingName: \"\",\r\n      level: \"\",\r\n      maxRank: \"\",\r\n      phone: \"\",\r\n    },\r\n\r\n    validationSchema,\r\n    onSubmit: async (values, { resetForm }) => {\r\n      console.log(values);\r\n      db.collection(\"codmFW\")\r\n        .add(values)\r\n        .then(() => {\r\n          console.log(\"registered successfully\");\r\n\r\n          resetForm();\r\n          setOpen(true);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      style={{ paddingTop: \"4.5rem\", minHeight: \"100vh\" }}\r\n      justify=\"center\"\r\n    >\r\n      <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          Registered Successfully!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Grid item container className={classes.formDiv} justify=\"flex-end\">\r\n        <Grid\r\n          item\r\n          sm={12}\r\n          style={{ height: \"10%\", textAlign: \"center\", width: \"100%\" }}\r\n        >\r\n          <h1>CODM Gaming Day</h1>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={7}\r\n          className={styles.rollDiv}\r\n          container\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item>\r\n            <Button\r\n              style={{\r\n                color: \"white\",\r\n                background: \"tomato\",\r\n                fontSize: \"1.3rem\",\r\n                fontWeight: \"700\",\r\n              }}\r\n              onClick={formik.handleSubmit}\r\n            >\r\n              Let's Roll\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} sm={5} style={{ height: \"90%\", padding: \"10px\" }}>\r\n          <TextField\r\n            label=\"Name\"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.name}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.name}\r\n            error={formik.touched.name && formik.errors.name ? true : false}\r\n            onBlur={formik.handleBlur}\r\n            name=\"name\"\r\n            id=\"name\"\r\n          />\r\n\r\n          <TextField\r\n            label=\"Gaming Name\"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.gamingName}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.gamingName}\r\n            error={\r\n              formik.touched.gamingName && formik.errors.gamingName\r\n                ? true\r\n                : false\r\n            }\r\n            onBlur={formik.handleBlur}\r\n            name=\"gamingName\"\r\n            id=\"gamingName\"\r\n          />\r\n          <TextField\r\n            label=\"Level\"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.level}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.level}\r\n            error={formik.touched.level && formik.errors.level ? true : false}\r\n            onBlur={formik.handleBlur}\r\n            name=\"level\"\r\n            id=\"level\"\r\n          />\r\n          <TextField\r\n            label=\"Maximum Rank Achieved\"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.maxRank}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.maxRank}\r\n            error={\r\n              formik.touched.maxRank && formik.errors.maxRank ? true : false\r\n            }\r\n            onBlur={formik.handleBlur}\r\n            name=\"maxRank\"\r\n            id=\"maxRank\"\r\n          />\r\n          <TextField\r\n            label=\"Phone No.(with country code)\"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.phone}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.phone}\r\n            error={formik.touched.phone && formik.errors.phone ? true : false}\r\n            onBlur={formik.handleBlur}\r\n            name=\"phone\"\r\n            id=\"phone\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CodmForm1v1;\r\n","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\form\\codmform\\aimbotCodm.js",["234","235","236","237","238","239","240","241","242","243"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid, makeStyles, TextField, Button } from \"@material-ui/core\";\r\nimport firebase from \"../../../firebase\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, ErrorMessage, Field, getIn, useFormik, Form } from \"formik\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport background from \"../../../assets/codm-bg.jpg\";\r\nimport Modal from \"./Modal\";\r\nimport styles from \"./codm.module.css\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n    \"& .MuiFormLabel-root\": {\r\n      color: \"white\",\r\n    },\r\n    \"& .MuiInputBase-root\": {\r\n      color: \"white\",\r\n    },\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  error: {\r\n    margin: \"-5px 10px 0px\",\r\n    fontSize: \"0.8rem\",\r\n    color: \"red\",\r\n  },\r\n  longAnswer: {\r\n    width: \"50ch\",\r\n    display: \"block\",\r\n  },\r\n  formDiv: {\r\n    color: \"white\",\r\n    borderRadius: \"10px\",\r\n    width: \"80%\",\r\n    padding: \"20px\",\r\n    backgroundSize: \"100% 100%\",\r\n    backgroundPosition: \"top\",\r\n    backgroundImage: `linear-gradient(to right,#00000073, #231d06e8), url(${background})`,\r\n    \"& .MuiFilledInput-underline:after \": {\r\n      borderBottom: \"2px solid #0e0b1f\",\r\n    },\r\n    \"& .MuiInputLabel-formControl\": {\r\n      color: \"#8bea9c\",\r\n    },\r\n    \"& .MuiInputBase-root\": {\r\n      color: \"#8bc0da\",\r\n    },\r\n    \"& .MuiFormControl-root\": {\r\n      marginRight: \"30px\",\r\n    },\r\n    \"@media (max-width:955px)\": {\r\n      width: \"100%\",\r\n      textAlign: \"center\",\r\n    },\r\n  },\r\n  label: {\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: \"500\",\r\n  },\r\n}));\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst CsgoForm = () => {\r\n  const classes = useStyles();\r\n\r\n  const [paymentImage, setPaymentImage] = useState(null);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [mesTypes, setMesType] = useState(\"\");\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const phoneRegex = RegExp(/^\\+(?:[0-9] ?){6,14}[0-9]$/);\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    teamName: Yup.string().required(\"*Required\"),\r\n    captName: Yup.string().required(\"*Required\"),\r\n    captPhoneNo: Yup.string()\r\n      .matches(phoneRegex, \"Invalid phone\")\r\n      .required(\"*Phone is required\"),\r\n    captIGN: Yup.string().required(\"*Required\"),\r\n    player2: Yup.string().required(\"*Required\"),\r\n    player2IGN: Yup.string().required(\"*Required\"),\r\n    player3: Yup.string(),\r\n    player3IGN: Yup.string(),\r\n    player4: Yup.string(),\r\n    player4IGN: Yup.string(),\r\n    player5: Yup.string(),\r\n    player5IGN: Yup.string(),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      teamName: \"\",\r\n      captName: \"\",\r\n      captPhoneNo: \"\",\r\n      captIGN: \"\",\r\n      player2: \"\",\r\n      player2IGN: \"\",\r\n      player3: \"\",\r\n      player3IGN: \"\",\r\n      player4: \"\",\r\n      player4IGN: \"\",\r\n      player5: \"\",\r\n      player5IGN: \"\",\r\n    },\r\n\r\n    validationSchema,\r\n    onSubmit: async (values, { resetForm }) => {\r\n      if (paymentImage === null) {\r\n        setMessage(\"Please upload payment confirmation image\");\r\n        setOpen(true);\r\n        setMesType(\"error\");\r\n        return;\r\n      }\r\n\r\n      var storageRef = firebase.storage().ref();\r\n\r\n      var imageRef = storageRef.child(`codm_moksha21/${paymentImage.name}`);\r\n      await imageRef.put(paymentImage);\r\n      const imageURL = await imageRef.getDownloadURL();\r\n      console.log(values);\r\n      await db\r\n        .collection(\"codmMoksha21\")\r\n        .add({\r\n          values,\r\n          paymentImage: imageURL,\r\n        })\r\n        .then(() => {\r\n          console.log(\"registered successfully\");\r\n\r\n          resetForm();\r\n          setPaymentImage(null);\r\n          setMesType(\"success\");\r\n          setMessage(\"Registered Successfully\");\r\n          setOpen(true);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n  });\r\n\r\n  const [isOpen, setOpenModal] = useState(false);\r\n  function modalClicked() {\r\n    setOpenModal(true);\r\n    console.log(\"clicked\");\r\n  }\r\n\r\n  const imageUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    setPaymentImage(file);\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      style={{ paddingTop: \"4.5rem\", minHeight: \"100vh\" }}\r\n      justify=\"center\"\r\n    >\r\n      <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={mesTypes}>\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Grid item container className={classes.formDiv} justify=\"flex-end\">\r\n        <Grid item sm={12} style={{ textAlign: \"center\", width: \"100%\" }}>\r\n          <h1>CODM Moksha'21 Registration Form</h1>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={7}\r\n          className={styles.rollDiv}\r\n          container\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          style={{ display: \"block\", textAlign: \"center\" }}\r\n        >\r\n          <Grid item>\r\n            <Button\r\n              style={{\r\n                color: \"white\",\r\n                background: \"tomato\",\r\n                fontSize: \"1.3rem\",\r\n                fontWeight: \"700\",\r\n              }}\r\n              onClick={modalClicked}\r\n            >\r\n              Check Rules\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item className={styles.payment}>\r\n            <h4>Payment Methods:</h4>\r\n            <p style={{ fontSize: \"1rem\" }}>\r\n              Paytm: +917424961361 (Mudit Mahajan)\r\n            </p>\r\n            <p style={{ fontSize: \"1rem\" }}>UPI: muditmhjn99@okicici</p>\r\n            <h4>Upload Payment Screenshot</h4>\r\n            <input\r\n              type=\"file\"\r\n              name=\"paymentImage\"\r\n              id=\"paymentImage\"\r\n              onChange={imageUpload}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              style={{\r\n                color: \"white\",\r\n                background: \"tomato\",\r\n                fontSize: \"1.3rem\",\r\n                fontWeight: \"700\",\r\n              }}\r\n              onClick={formik.handleSubmit}\r\n            >\r\n              Let's Roll\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} sm={5} style={{ padding: \"10px\" }}>\r\n          <TextField\r\n            label=\"Team Name\"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.teamName}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.teamName}\r\n            error={\r\n              formik.touched.teamName && formik.errors.teamName ? true : false\r\n            }\r\n            onBlur={formik.handleBlur}\r\n            name=\"teamName\"\r\n            id=\"teamName\"\r\n          />\r\n          <TextField\r\n            label=\"Phone No.\"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.captPhoneNo}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.captPhoneNo}\r\n            error={\r\n              formik.touched.captPhoneNo && formik.errors.captPhoneNo\r\n                ? true\r\n                : false\r\n            }\r\n            onBlur={formik.handleBlur}\r\n            name=\"captPhoneNo\"\r\n            id=\"captPhoneNo\"\r\n          />\r\n          <p className={classes.label}>Player 1(Captain)</p>\r\n\r\n          <TextField\r\n            label=\"Name\"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.captName}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.captName}\r\n            error={\r\n              formik.touched.captName && formik.errors.captName ? true : false\r\n            }\r\n            onBlur={formik.handleBlur}\r\n            name=\"captName\"\r\n            id=\"captName\"\r\n          />\r\n          <TextField\r\n            label=\"In Game Name\"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.captIGN}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.captIGN}\r\n            error={\r\n              formik.touched.captIGN && formik.errors.captIGN ? true : false\r\n            }\r\n            onBlur={formik.handleBlur}\r\n            name=\"captIGN\"\r\n            id=\"captIGN\"\r\n          />\r\n\r\n          <p className={classes.label}>Player 2</p>\r\n          <TextField\r\n            label=\"Name \"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.player2}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.player2}\r\n            error={\r\n              formik.touched.player2 && formik.errors.player2 ? true : false\r\n            }\r\n            onBlur={formik.handleBlur}\r\n            name=\"player2\"\r\n            id=\"player2\"\r\n          />\r\n          <TextField\r\n            label=\"In Game Name\"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.player2IGN}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.player2IGN}\r\n            error={\r\n              formik.touched.player2IGN && formik.errors.player2IGN\r\n                ? true\r\n                : false\r\n            }\r\n            onBlur={formik.handleBlur}\r\n            name=\"player2IGN\"\r\n            id=\"player2IGN\"\r\n          />\r\n          <p className={classes.label}>Player 3</p>\r\n          <TextField\r\n            label=\"Name\"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.player3}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.player3}\r\n            error={\r\n              formik.touched.player3 && formik.errors.player3 ? true : false\r\n            }\r\n            onBlur={formik.handleBlur}\r\n            name=\"player3\"\r\n            id=\"player3\"\r\n          />\r\n          <TextField\r\n            label=\"In Game Name\"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.player3IGN}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.player3IGN}\r\n            error={\r\n              formik.touched.player3IGN && formik.errors.player3IGN\r\n                ? true\r\n                : false\r\n            }\r\n            onBlur={formik.handleBlur}\r\n            name=\"player3IGN\"\r\n            id=\"player3IGN\"\r\n          />\r\n          <p className={classes.label}>Player 4</p>\r\n          <TextField\r\n            label=\"Name\"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.player4}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.player4}\r\n            error={\r\n              formik.touched.player4 && formik.errors.player4 ? true : false\r\n            }\r\n            onBlur={formik.handleBlur}\r\n            name=\"player4\"\r\n            id=\"player4\"\r\n          />\r\n          <TextField\r\n            label=\"In Game Name\"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.player4IGN}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.player4IGN}\r\n            error={\r\n              formik.touched.player4IGN && formik.errors.player4IGN\r\n                ? true\r\n                : false\r\n            }\r\n            onBlur={formik.handleBlur}\r\n            name=\"player4IGN\"\r\n            id=\"player4IGN\"\r\n          />\r\n          <p className={classes.label}>Player 5</p>\r\n          <TextField\r\n            label=\"Name\"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.player5}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.player5}\r\n            error={\r\n              formik.touched.player5 && formik.errors.player5 ? true : false\r\n            }\r\n            onBlur={formik.handleBlur}\r\n            name=\"player5\"\r\n            id=\"player5\"\r\n          />\r\n          <TextField\r\n            label=\"In Game Name\"\r\n            color=\"secondary\"\r\n            helperText={formik.errors.player5IGN}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.player5IGN}\r\n            error={\r\n              formik.touched.player5IGN && formik.errors.player5IGN\r\n                ? true\r\n                : false\r\n            }\r\n            onBlur={formik.handleBlur}\r\n            name=\"player5IGN\"\r\n            id=\"player5IGN\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      {isOpen ? (\r\n        <Modal\r\n          close={() => {\r\n            setOpenModal(false);\r\n          }}\r\n          game={\"codm\"}\r\n        />\r\n      ) : null}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CsgoForm;\r\n","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\form\\codmform\\Modal.jsx",["244"],"import { icon } from \"@fortawesome/fontawesome-svg-core\";\r\nimport React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport \"./codm.module.css\";\r\n\r\nfunction Modal(props) {\r\n  return ReactDom.createPortal(\r\n    <div className=\"modal-overlay\">\r\n      <div\r\n        className=\"modal-ui\"\r\n        style={{\r\n          height: \"80vh\",\r\n          overflow: \"auto\",\r\n          textAlign: \"center\",\r\n          padding: \"20px\",\r\n        }}\r\n      >\r\n        <div onClick={props.close}>\r\n          <i className=\"icon-modal\">⚔</i>\r\n        </div>\r\n        <h1 className=\"modal-heading\">Rules</h1>\r\n        {props.game === \"codm\" ? (\r\n          <p className=\"modal-para\">\r\n            <strong>\r\n              {\" \"}\r\n              1)The teams will be comprised of 5 members.The entry fee for the\r\n              whole team is ₹ 150.\r\n            </strong>{\" \"}\r\n            <br />\r\n            <strong>\r\n              2)The tournament will be conducted in a knockout format\r\n            </strong>\r\n            .<br />\r\n            <strong> 3)Each match will take place in 3 rounds</strong>-<br />\r\n            a)The first being <strong>Domination</strong> <br />\r\n            b)Second being <strong>Hardpoint</strong> <br />\r\n            c)third will be <strong>Search and Destroy</strong> <br />\r\n            <strong>\r\n              {\" \"}\r\n              4)Scorestreaks are not allowed. Using them will result in instant\r\n              disqualification\r\n            </strong>\r\n            .<br />\r\n            <strong>\r\n              5)No emulators and hacks are allowed, if anyone is found guilty of\r\n              using them the whole team will be disqualified\r\n            </strong>\r\n            .<br />\r\n            <strong>\r\n              Note - Even if you don't have a team you can still participate,\r\n              but atleast 2 players (including captain) are require\r\n            </strong>\r\n            d<br />\r\n            <strong>6)NO REFUND will be provided in any case</strong>.<br />\r\n            <strong>\r\n              Prizes : Cash pool prize and other exciting accessories\r\n              <br />\r\n            </strong>\r\n          </p>\r\n        ) : null}\r\n      </div>\r\n    </div>,\r\n    document.getElementById(\"portal\")\r\n  );\r\n}\r\nexport default Modal;\r\n","C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\form\\valorantForm\\aimbotValorant.js",["245","246","247","248","249","250","251","252","253","254"],"C:\\Users\\Naman\\Documents\\venatus\\frontend\\src\\screens\\form\\valorantForm\\Modal.jsx",["255"],"import { icon } from \"@fortawesome/fontawesome-svg-core\";\r\nimport React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport \"./valorant.module.css\";\r\n\r\nfunction Modal(props) {\r\n  return ReactDom.createPortal(\r\n    <div className=\"modal-overlay\">\r\n      <div\r\n        className=\"modal-ui\"\r\n        style={{\r\n          height: \"80vh\",\r\n          overflow: \"auto\",\r\n          textAlign: \"center\",\r\n          padding: \"20px\",\r\n        }}\r\n      >\r\n        <div onClick={props.close}>\r\n          <i className=\"icon-modal\">⚔</i>\r\n        </div>\r\n        <h1 className=\"modal-heading\">Rules</h1>\r\n        {props.game === \"valorant\" ? (\r\n          <p className=\"modal-para\">\r\n            <strong>\r\n              Entry Fee: The Team will be comprised of 5 Members. ( Entry fee\r\n              for the whole team is 500 Rupees, 100 Rupees Per Person )\r\n            </strong>\r\n            <br />\r\n            <strong> The Teams can have 1 substitute.</strong>\r\n            <br />\r\n            In order to enter the tournament participants have to register with\r\n            a team of five. <br />\r\n            <strong> Tournament Settings:</strong>\r\n            <br />\r\n            Bracket Type: Best Of 1, Knockout Format.\r\n            <br />\r\n            Finals will be Best of 3.\r\n            <br />\r\n            Match Type: Winner of the match will advance to next round\r\n            <br />\r\n            Winner: First to 13 rounds or +2 differential in overtime\r\n            <br />\r\n            No Show Time: 10 minutes\r\n            <br />\r\n            Match Ready time: 5 minutes\r\n            <br />\r\n            Format: 5v5\r\n            <br />\r\n            Platforms: PC\r\n            <br />\r\n            Mode: Tournament\r\n            <br />\r\n            <br />\r\n            <strong>\r\n              {\" \"}\r\n              A normal VETO would take place for choosing sides and maps from\r\n              the map-pool on discord with a moderator from Venatus, after which\r\n              moderator will be hosting the custom server for the same.\r\n            </strong>{\" \"}\r\n            <br />\r\n            Maps :<br />\r\n            Ascent\r\n            <br />\r\n            Bind <br />\r\n            Haven\r\n            <br />\r\n            Split\r\n            <br />\r\n            Icebox\r\n            <br />\r\n            <br />\r\n            Skins are Allowed.\r\n            <br />\r\n            <br />\r\n            <strong>\r\n              {\" \"}\r\n              Zero Tolerance for Hacking/ Cheating. If anyone is found guilty\r\n              using any sort of hack, the whole team will be disqualified and\r\n              will not be allowed to participate in future events.\r\n            </strong>\r\n            <br />\r\n            <br />\r\n            <strong>\r\n              Every team will be given the opportunity to show up to their\r\n              match, we require that you be online at least 15 minutes prior to\r\n              your match in order to check-in. If you are not online and checked\r\n              in at that time, we will forfeit your team.\r\n            </strong>\r\n            <br />\r\n            <br />\r\n            <strong>\r\n              If a team suffers a disconnection, the player will be given 10\r\n              minutes to reconnect to the game (the team with the disconnection\r\n              can request for a pause). If they have not reconnected in that\r\n              time, the team will have to continue playing without that player.\r\n            </strong>\r\n            <br />\r\n            <br />\r\n            <strong>\r\n              Teams must take screenshots after the game has concluded and be\r\n              able to provide this info when request. Moderators will be\r\n              spectating the match all the way to the end and the final result\r\n              will be posted on the group with a screenshot of the same.\r\n            </strong>\r\n            <br />\r\n            <br />\r\n            <strong>\r\n              If a participant of any team is being toxic, using hateful speech\r\n              for fellow players or the opponents his/her team would be\r\n              subjected to disqualification. That decision lies with the\r\n              moderator of the match. He/ she can also consult the rest of the\r\n              team or the game head regarding the same.\r\n            </strong>{\" \"}\r\n            <br />\r\n            <br />\r\n            <strong>\r\n              Fixtures will be provided to the captains of all the team via the\r\n              Whatsapp group only, including the timings for all the games.\r\n              (Mind that it won’t be changed in any case after the tournament\r\n              has begun).\r\n            </strong>\r\n            <br />\r\n            <br />\r\n            <strong> No Refund will be provided in any case.</strong>\r\n          </p>\r\n        ) : null}\r\n      </div>\r\n    </div>,\r\n    document.getElementById(\"portal\")\r\n  );\r\n}\r\nexport default Modal;\r\n",{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","severity":1,"message":"261","line":11,"column":8,"nodeType":"262","messageId":"263","endLine":11,"endColumn":16},{"ruleId":"260","severity":1,"message":"264","line":12,"column":8,"nodeType":"262","messageId":"263","endLine":12,"endColumn":19},{"ruleId":"260","severity":1,"message":"265","line":13,"column":8,"nodeType":"262","messageId":"263","endLine":13,"endColumn":19},{"ruleId":"260","severity":1,"message":"266","line":14,"column":8,"nodeType":"262","messageId":"263","endLine":14,"endColumn":18},{"ruleId":"260","severity":1,"message":"267","line":15,"column":8,"nodeType":"262","messageId":"263","endLine":15,"endColumn":22},{"ruleId":"260","severity":1,"message":"268","line":7,"column":3,"nodeType":"262","messageId":"263","endLine":7,"endColumn":13},{"ruleId":"260","severity":1,"message":"269","line":7,"column":8,"nodeType":"262","messageId":"263","endLine":7,"endColumn":13},{"ruleId":"260","severity":1,"message":"270","line":10,"column":10,"nodeType":"262","messageId":"263","endLine":10,"endColumn":15},{"ruleId":"260","severity":1,"message":"271","line":10,"column":17,"nodeType":"262","messageId":"263","endLine":10,"endColumn":26},{"ruleId":"260","severity":1,"message":"272","line":1,"column":17,"nodeType":"262","messageId":"263","endLine":1,"endColumn":25},{"ruleId":"260","severity":1,"message":"273","line":2,"column":16,"nodeType":"262","messageId":"263","endLine":2,"endColumn":21},{"ruleId":"260","severity":1,"message":"269","line":5,"column":8,"nodeType":"262","messageId":"263","endLine":5,"endColumn":13},{"ruleId":"260","severity":1,"message":"274","line":6,"column":8,"nodeType":"262","messageId":"263","endLine":6,"endColumn":16},{"ruleId":"260","severity":1,"message":"275","line":8,"column":8,"nodeType":"262","messageId":"263","endLine":8,"endColumn":14},{"ruleId":"260","severity":1,"message":"276","line":9,"column":8,"nodeType":"262","messageId":"263","endLine":9,"endColumn":15},{"ruleId":"260","severity":1,"message":"277","line":10,"column":8,"nodeType":"262","messageId":"263","endLine":10,"endColumn":12},{"ruleId":"260","severity":1,"message":"278","line":2,"column":10,"nodeType":"262","messageId":"263","endLine":2,"endColumn":14},{"ruleId":"260","severity":1,"message":"273","line":2,"column":16,"nodeType":"262","messageId":"263","endLine":2,"endColumn":21},{"ruleId":"260","severity":1,"message":"279","line":4,"column":8,"nodeType":"262","messageId":"263","endLine":4,"endColumn":15},{"ruleId":"260","severity":1,"message":"280","line":4,"column":19,"nodeType":"262","messageId":"263","endLine":4,"endColumn":36},{"ruleId":"256","replacedBy":"281"},{"ruleId":"258","replacedBy":"282"},{"ruleId":"260","severity":1,"message":"283","line":35,"column":9,"nodeType":"262","messageId":"263","endLine":35,"endColumn":16},{"ruleId":"260","severity":1,"message":"284","line":38,"column":12,"nodeType":"262","messageId":"263","endLine":38,"endColumn":21},{"ruleId":"260","severity":1,"message":"285","line":1,"column":10,"nodeType":"262","messageId":"263","endLine":1,"endColumn":14},{"ruleId":"286","severity":1,"message":"287","line":14,"column":9,"nodeType":"288","endLine":14,"endColumn":55},{"ruleId":"260","severity":1,"message":"289","line":5,"column":10,"nodeType":"262","messageId":"263","endLine":5,"endColumn":20},{"ruleId":"260","severity":1,"message":"290","line":7,"column":10,"nodeType":"262","messageId":"263","endLine":7,"endColumn":16},{"ruleId":"260","severity":1,"message":"285","line":1,"column":10,"nodeType":"262","messageId":"263","endLine":1,"endColumn":14},{"ruleId":"260","severity":1,"message":"291","line":8,"column":10,"nodeType":"262","messageId":"263","endLine":8,"endColumn":20},{"ruleId":"286","severity":1,"message":"287","line":18,"column":9,"nodeType":"288","endLine":18,"endColumn":65},{"ruleId":"260","severity":1,"message":"268","line":7,"column":3,"nodeType":"262","messageId":"263","endLine":7,"endColumn":13},{"ruleId":"260","severity":1,"message":"285","line":1,"column":10,"nodeType":"262","messageId":"263","endLine":1,"endColumn":14},{"ruleId":"260","severity":1,"message":"292","line":5,"column":8,"nodeType":"262","messageId":"263","endLine":5,"endColumn":16},{"ruleId":"260","severity":1,"message":"293","line":6,"column":8,"nodeType":"262","messageId":"263","endLine":6,"endColumn":15},{"ruleId":"260","severity":1,"message":"294","line":7,"column":10,"nodeType":"262","messageId":"263","endLine":7,"endColumn":25},{"ruleId":"260","severity":1,"message":"291","line":8,"column":10,"nodeType":"262","messageId":"263","endLine":8,"endColumn":20},{"ruleId":"286","severity":1,"message":"287","line":18,"column":9,"nodeType":"288","endLine":18,"endColumn":62},{"ruleId":"260","severity":1,"message":"272","line":1,"column":17,"nodeType":"262","messageId":"263","endLine":1,"endColumn":25},{"ruleId":"260","severity":1,"message":"295","line":1,"column":27,"nodeType":"262","messageId":"263","endLine":1,"endColumn":36},{"ruleId":"260","severity":1,"message":"278","line":2,"column":10,"nodeType":"262","messageId":"263","endLine":2,"endColumn":14},{"ruleId":"260","severity":1,"message":"296","line":2,"column":16,"nodeType":"262","messageId":"263","endLine":2,"endColumn":26},{"ruleId":"260","severity":1,"message":"297","line":2,"column":28,"nodeType":"262","messageId":"263","endLine":2,"endColumn":37},{"ruleId":"260","severity":1,"message":"298","line":3,"column":8,"nodeType":"262","messageId":"263","endLine":3,"endColumn":16},{"ruleId":"260","severity":1,"message":"299","line":4,"column":13,"nodeType":"262","messageId":"263","endLine":4,"endColumn":16},{"ruleId":"260","severity":1,"message":"300","line":5,"column":10,"nodeType":"262","messageId":"263","endLine":5,"endColumn":19},{"ruleId":"260","severity":1,"message":"261","line":7,"column":8,"nodeType":"262","messageId":"263","endLine":7,"endColumn":16},{"ruleId":"260","severity":1,"message":"295","line":1,"column":27,"nodeType":"262","messageId":"263","endLine":1,"endColumn":36},{"ruleId":"260","severity":1,"message":"301","line":5,"column":10,"nodeType":"262","messageId":"263","endLine":5,"endColumn":16},{"ruleId":"260","severity":1,"message":"302","line":5,"column":18,"nodeType":"262","messageId":"263","endLine":5,"endColumn":30},{"ruleId":"260","severity":1,"message":"303","line":5,"column":32,"nodeType":"262","messageId":"263","endLine":5,"endColumn":37},{"ruleId":"260","severity":1,"message":"304","line":5,"column":39,"nodeType":"262","messageId":"263","endLine":5,"endColumn":44},{"ruleId":"260","severity":1,"message":"305","line":6,"column":8,"nodeType":"262","messageId":"263","endLine":6,"endColumn":17},{"ruleId":"260","severity":1,"message":"295","line":1,"column":27,"nodeType":"262","messageId":"263","endLine":1,"endColumn":36},{"ruleId":"260","severity":1,"message":"301","line":5,"column":10,"nodeType":"262","messageId":"263","endLine":5,"endColumn":16},{"ruleId":"260","severity":1,"message":"302","line":5,"column":18,"nodeType":"262","messageId":"263","endLine":5,"endColumn":30},{"ruleId":"260","severity":1,"message":"303","line":5,"column":32,"nodeType":"262","messageId":"263","endLine":5,"endColumn":37},{"ruleId":"260","severity":1,"message":"304","line":5,"column":39,"nodeType":"262","messageId":"263","endLine":5,"endColumn":44},{"ruleId":"260","severity":1,"message":"306","line":5,"column":57,"nodeType":"262","messageId":"263","endLine":5,"endColumn":61},{"ruleId":"260","severity":1,"message":"305","line":6,"column":8,"nodeType":"262","messageId":"263","endLine":6,"endColumn":17},{"ruleId":"260","severity":1,"message":"307","line":7,"column":8,"nodeType":"262","messageId":"263","endLine":7,"endColumn":24},{"ruleId":"260","severity":1,"message":"308","line":8,"column":8,"nodeType":"262","messageId":"263","endLine":8,"endColumn":16},{"ruleId":"260","severity":1,"message":"309","line":11,"column":10,"nodeType":"262","messageId":"263","endLine":11,"endColumn":20},{"ruleId":"260","severity":1,"message":"295","line":1,"column":27,"nodeType":"262","messageId":"263","endLine":1,"endColumn":36},{"ruleId":"260","severity":1,"message":"301","line":5,"column":10,"nodeType":"262","messageId":"263","endLine":5,"endColumn":16},{"ruleId":"260","severity":1,"message":"302","line":5,"column":18,"nodeType":"262","messageId":"263","endLine":5,"endColumn":30},{"ruleId":"260","severity":1,"message":"303","line":5,"column":32,"nodeType":"262","messageId":"263","endLine":5,"endColumn":37},{"ruleId":"260","severity":1,"message":"304","line":5,"column":39,"nodeType":"262","messageId":"263","endLine":5,"endColumn":44},{"ruleId":"260","severity":1,"message":"306","line":5,"column":57,"nodeType":"262","messageId":"263","endLine":5,"endColumn":61},{"ruleId":"260","severity":1,"message":"305","line":6,"column":8,"nodeType":"262","messageId":"263","endLine":6,"endColumn":17},{"ruleId":"260","severity":1,"message":"307","line":7,"column":8,"nodeType":"262","messageId":"263","endLine":7,"endColumn":24},{"ruleId":"260","severity":1,"message":"308","line":8,"column":8,"nodeType":"262","messageId":"263","endLine":8,"endColumn":16},{"ruleId":"260","severity":1,"message":"309","line":11,"column":10,"nodeType":"262","messageId":"263","endLine":11,"endColumn":20},{"ruleId":"260","severity":1,"message":"295","line":1,"column":27,"nodeType":"262","messageId":"263","endLine":1,"endColumn":36},{"ruleId":"260","severity":1,"message":"301","line":5,"column":10,"nodeType":"262","messageId":"263","endLine":5,"endColumn":16},{"ruleId":"260","severity":1,"message":"302","line":5,"column":18,"nodeType":"262","messageId":"263","endLine":5,"endColumn":30},{"ruleId":"260","severity":1,"message":"303","line":5,"column":32,"nodeType":"262","messageId":"263","endLine":5,"endColumn":37},{"ruleId":"260","severity":1,"message":"304","line":5,"column":39,"nodeType":"262","messageId":"263","endLine":5,"endColumn":44},{"ruleId":"260","severity":1,"message":"306","line":5,"column":57,"nodeType":"262","messageId":"263","endLine":5,"endColumn":61},{"ruleId":"260","severity":1,"message":"305","line":6,"column":8,"nodeType":"262","messageId":"263","endLine":6,"endColumn":17},{"ruleId":"260","severity":1,"message":"307","line":7,"column":8,"nodeType":"262","messageId":"263","endLine":7,"endColumn":24},{"ruleId":"260","severity":1,"message":"308","line":8,"column":8,"nodeType":"262","messageId":"263","endLine":8,"endColumn":16},{"ruleId":"260","severity":1,"message":"309","line":11,"column":10,"nodeType":"262","messageId":"263","endLine":11,"endColumn":20},{"ruleId":"260","severity":1,"message":"295","line":1,"column":27,"nodeType":"262","messageId":"263","endLine":1,"endColumn":36},{"ruleId":"260","severity":1,"message":"301","line":5,"column":10,"nodeType":"262","messageId":"263","endLine":5,"endColumn":16},{"ruleId":"260","severity":1,"message":"302","line":5,"column":18,"nodeType":"262","messageId":"263","endLine":5,"endColumn":30},{"ruleId":"260","severity":1,"message":"303","line":5,"column":32,"nodeType":"262","messageId":"263","endLine":5,"endColumn":37},{"ruleId":"260","severity":1,"message":"304","line":5,"column":39,"nodeType":"262","messageId":"263","endLine":5,"endColumn":44},{"ruleId":"260","severity":1,"message":"306","line":5,"column":57,"nodeType":"262","messageId":"263","endLine":5,"endColumn":61},{"ruleId":"260","severity":1,"message":"305","line":6,"column":8,"nodeType":"262","messageId":"263","endLine":6,"endColumn":17},{"ruleId":"260","severity":1,"message":"307","line":7,"column":8,"nodeType":"262","messageId":"263","endLine":7,"endColumn":24},{"ruleId":"260","severity":1,"message":"308","line":8,"column":8,"nodeType":"262","messageId":"263","endLine":8,"endColumn":16},{"ruleId":"260","severity":1,"message":"309","line":11,"column":10,"nodeType":"262","messageId":"263","endLine":11,"endColumn":20},{"ruleId":"260","severity":1,"message":"285","line":1,"column":10,"nodeType":"262","messageId":"263","endLine":1,"endColumn":14},{"ruleId":"260","severity":1,"message":"295","line":1,"column":27,"nodeType":"262","messageId":"263","endLine":1,"endColumn":36},{"ruleId":"260","severity":1,"message":"301","line":5,"column":10,"nodeType":"262","messageId":"263","endLine":5,"endColumn":16},{"ruleId":"260","severity":1,"message":"302","line":5,"column":18,"nodeType":"262","messageId":"263","endLine":5,"endColumn":30},{"ruleId":"260","severity":1,"message":"303","line":5,"column":32,"nodeType":"262","messageId":"263","endLine":5,"endColumn":37},{"ruleId":"260","severity":1,"message":"304","line":5,"column":39,"nodeType":"262","messageId":"263","endLine":5,"endColumn":44},{"ruleId":"260","severity":1,"message":"306","line":5,"column":57,"nodeType":"262","messageId":"263","endLine":5,"endColumn":61},{"ruleId":"260","severity":1,"message":"305","line":6,"column":8,"nodeType":"262","messageId":"263","endLine":6,"endColumn":17},{"ruleId":"260","severity":1,"message":"307","line":7,"column":8,"nodeType":"262","messageId":"263","endLine":7,"endColumn":24},{"ruleId":"260","severity":1,"message":"308","line":8,"column":8,"nodeType":"262","messageId":"263","endLine":8,"endColumn":16},{"ruleId":"260","severity":1,"message":"309","line":11,"column":10,"nodeType":"262","messageId":"263","endLine":11,"endColumn":20},{"ruleId":"260","severity":1,"message":"285","line":1,"column":10,"nodeType":"262","messageId":"263","endLine":1,"endColumn":14},"no-native-reassign",["310"],"no-negated-in-lhs",["311"],"no-unused-vars","'CsgoForm' is defined but never used.","Identifier","unusedVar","'CsgoForm1v1' is defined but never used.","'CodmForm1v1' is defined but never used.","'AmibotCodm' is defined but never used.","'AimBotValorant' is defined but never used.","'IconButton' is defined but never used.","'Modal' is defined but never used.","'event' is assigned a value but never used.","'onTrigger' is assigned a value but never used.","'useState' is defined but never used.","'Paper' is defined but never used.","'PaperSec' is defined but never used.","'csgobg' is defined but never used.","'csgo1v1' is defined but never used.","'codm' is defined but never used.","'Grid' is defined but never used.","'Masonry' is defined but never used.","'ResponsiveMasonry' is defined but never used.",["310"],["311"],"'history' is assigned a value but never used.","'onClicked' is defined but never used.","'icon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Typography' is defined but never used.","'Button' is defined but never used.","'faWhatsapp' is defined but never used.","'Whatsapp' is defined but never used.","'Discord' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'useEffect' is defined but never used.","'makeStyles' is defined but never used.","'TextField' is defined but never used.","'firebase' is defined but never used.","'Yup' is defined but never used.","'useFormik' is defined but never used.","'Formik' is defined but never used.","'ErrorMessage' is defined but never used.","'Field' is defined but never used.","'getIn' is defined but never used.","'FormGroup' is defined but never used.","'Form' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation"]